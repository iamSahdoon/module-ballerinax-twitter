{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "X API v2",
    "description" : "X API v2 available endpoints",
    "termsOfService" : "https://developer.x.com/en/developer-terms/agreement-and-policy.html",
    "contact" : {
      "name" : "X Developers",
      "url" : "https://developer.x.com/"
    },
    "license" : {
      "name" : "X Developer Agreement and Policy",
      "url" : "https://developer.x.com/en/developer-terms/agreement-and-policy.html"
    },
    "version" : "2.150"
  },
  "servers" : [ {
    "url" : "https://api.x.com/2",
    "description" : "X API"
  } ],
  "tags" : [ {
    "name" : "Account Activity",
    "description" : "Endpoints relating to retrieving, managing AAA subscriptions",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://docs.x.com/x-api/enterprise-gnip-2.0/fundamentals/account-activity"
    }
  }, {
    "name" : "Bookmarks",
    "description" : "Endpoints related to retrieving, managing bookmarks of a user",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/bookmarks"
    }
  }, {
    "name" : "Compliance",
    "description" : "Endpoints related to keeping X data in your systems compliant",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction"
    }
  }, {
    "name" : "Connections",
    "description" : "Endpoints related to streaming connections",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.x.com/en/docs/x-api/connections"
    }
  }, {
    "name" : "Direct Messages",
    "description" : "Endpoints related to retrieving, managing Direct Messages",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/direct-messages"
    }
  }, {
    "name" : "General",
    "description" : "Miscellaneous endpoints for general API functionality",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api"
    }
  }, {
    "name" : "Lists",
    "description" : "Endpoints related to retrieving, managing Lists",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/lists"
    }
  }, {
    "name" : "Media",
    "description" : "Endpoints related to Media",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.x.com"
    }
  }, {
    "name" : "MediaUpload",
    "description" : "Endpoints related to uploading Media",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.x.com"
    }
  }, {
    "name" : "Spaces",
    "description" : "Endpoints related to retrieving, managing Spaces",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces"
    }
  }, {
    "name" : "Stream",
    "description" : "Endpoints related to streaming",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.x.com"
    }
  }, {
    "name" : "Tweets",
    "description" : "Endpoints related to retrieving, searching, and modifying Tweets",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup"
    }
  }, {
    "name" : "Users",
    "description" : "Endpoints related to retrieving, managing relationships of Users",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup"
    }
  } ],
  "paths" : {
    "/account_activity/replay/webhooks/{webhookId}/subscriptions/all" : {
      "post" : {
        "tags" : [ "Account Activity" ],
        "summary" : "Create replay job",
        "description" : "Creates a replay job to retrieve activities from up to the past 5 days for all subscriptions associated with a given webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "createAccountActivityReplayJob",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The unique identifier for the webhook configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        }, {
          "name" : "from_date",
          "in" : "query",
          "description" : "The oldest (starting) UTC timestamp (inclusive) from which events will be provided, in `yyyymmddhhmm` format",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^\\d{12}$",
            "type" : "string",
            "example" : "202504242000"
          },
          "x-ballerina-name" : "fromDate"
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "The latest (ending) UTC timestamp (exclusive) up to which events will be provided, in `yyyymmddhhmm` format",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "pattern" : "^\\d{12}$",
            "type" : "string",
            "example" : "202504242200"
          },
          "x-ballerina-name" : "toDate"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplayJobCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/account_activity/subscriptions/count" : {
      "get" : {
        "tags" : [ "Account Activity" ],
        "summary" : "Get subscription count",
        "description" : "Retrieves a count of currently active Account Activity subscriptions.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "getAccountActivitySubscriptionCount",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsCountGetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/account_activity/webhooks/{webhookId}/subscriptions/all" : {
      "get" : {
        "tags" : [ "Account Activity" ],
        "summary" : "Validate subscription",
        "description" : "Checks a userâ€™s Account Activity subscription for a given webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "validateAccountActivitySubscription",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The webhook ID to check subscription against",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsGetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Account Activity" ],
        "summary" : "Create subscription",
        "description" : "Creates an Account Activity subscription for the user and the given webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "createAccountActivitySubscription",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The webhook ID to check subscription against",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionsCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/account_activity/webhooks/{webhookId}/subscriptions/all/list" : {
      "get" : {
        "tags" : [ "Account Activity" ],
        "summary" : "Get subscriptions",
        "description" : "Retrieves a list of all active subscriptions for a given webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "getAccountActivitySubscriptions",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The webhook ID to pull subscriptions for",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsListGetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/account_activity/webhooks/{webhookId}/subscriptions/{userId}/all" : {
      "delete" : {
        "tags" : [ "Account Activity" ],
        "summary" : "Delete subscription",
        "description" : "Deletes an Account Activity subscription for the given webhook and user ID.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "deleteAccountActivitySubscription",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The webhook ID to check subscription against",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID to unsubscribe from",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/communities/search" : {
      "get" : {
        "tags" : [ "Communities" ],
        "summary" : "Search Communities",
        "description" : "Retrieves a list of Communities matching the specified search query.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "searchCommunities",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Query to search communities",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "Love"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of search results to be returned by a request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/NextToken"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/NextToken"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/CommunityFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2CommunitiesSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/communities/{id}" : {
      "get" : {
        "tags" : [ "Communities" ],
        "summary" : "Get Community by ID",
        "description" : "Retrieves details of a specific Community by its ID.",
        "externalDocs" : {
          "url" : "https://developer.x.com/en/docs/x-api/communities/api-reference/get-communities-id"
        },
        "operationId" : "getCommunitiesById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Community",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CommunityId"
          }
        }, {
          "$ref" : "#/components/parameters/CommunityFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2CommunitiesIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/compliance/jobs" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "Get Compliance Jobs",
        "description" : "Retrieves a list of Compliance Jobs filtered by job type and optional status.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs"
        },
        "operationId" : "getComplianceJobs",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Type of Compliance Job to list",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "tweets", "users" ]
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of Compliance Job to list",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "created", "in_progress", "failed", "complete" ]
          }
        }, {
          "$ref" : "#/components/parameters/ComplianceJobFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ComplianceJobsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Compliance" ],
        "summary" : "Create Compliance Job",
        "description" : "Creates a new Compliance Job for the specified job type.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs"
        },
        "operationId" : "createComplianceJobs",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateComplianceJobRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateComplianceJobResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/compliance/jobs/{id}" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "Get Compliance Job by ID",
        "description" : "Retrieves details of a specific Compliance Job by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs-id"
        },
        "operationId" : "getComplianceJobsById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Compliance Job to retrieve",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/JobId"
          }
        }, {
          "$ref" : "#/components/parameters/ComplianceJobFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ComplianceJobsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/connections/all" : {
      "delete" : {
        "tags" : [ "Connections" ],
        "summary" : "Terminate all connections",
        "description" : "Terminates all active streaming connections for the authenticated application.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/connections/terminate-all-connections"
        },
        "operationId" : "deleteAllConnections",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KillAllConnectionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/dm_conversations" : {
      "post" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Create DM conversation",
        "description" : "Initiates a new direct message conversation with specified participants.",
        "operationId" : "createDirectMessagesConversation",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDmConversationRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/with/{participantId}/dm_events" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get DM events for a DM conversation",
        "description" : "Retrieves direct message events for a specific conversation.",
        "operationId" : "getDirectMessagesEventsByParticipantId",
        "parameters" : [ {
          "name" : "participantId",
          "in" : "path",
          "description" : "The ID of the participant user for the One to One DM conversation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "The set of event_types to include in the results",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "MessageCreate", "ParticipantsLeave" ],
            "items" : {
              "type" : "string",
              "enum" : [ "MessageCreate", "ParticipantsJoin", "ParticipantsLeave" ]
            },
            "default" : [ "MessageCreate", "ParticipantsLeave", "ParticipantsJoin" ]
          },
          "x-ballerina-name" : "eventTypes"
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmConversationsWithParticipantIdDmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/with/{participantId}/messages" : {
      "post" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Create DM message by participant ID",
        "description" : "Sends a new direct message to a specific participant by their ID.",
        "operationId" : "createDirectMessagesByParticipantId",
        "parameters" : [ {
          "name" : "participantId",
          "in" : "path",
          "description" : "The ID of the recipient user that will receive the DM",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/{dmConversationId}/messages" : {
      "post" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Create DM message by conversation ID",
        "description" : "Sends a new direct message to a specific conversation by its ID.",
        "operationId" : "createDirectMessagesByConversationId",
        "parameters" : [ {
          "name" : "dmConversationId",
          "in" : "path",
          "description" : "The DM Conversation ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/{id}/dm_events" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get DM events for a DM conversation",
        "description" : "Retrieves direct message events for a specific conversation.",
        "operationId" : "getDirectMessagesEventsByConversationId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The DM conversation ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DmConversationId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "The set of event_types to include in the results",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "MessageCreate", "ParticipantsLeave" ],
            "items" : {
              "type" : "string",
              "enum" : [ "MessageCreate", "ParticipantsJoin", "ParticipantsLeave" ]
            },
            "default" : [ "MessageCreate", "ParticipantsLeave", "ParticipantsJoin" ]
          },
          "x-ballerina-name" : "eventTypes"
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_events" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get DM events",
        "description" : "Retrieves a list of recent direct message events across all conversations.",
        "operationId" : "getDirectMessagesEvents",
        "parameters" : [ {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "The set of event_types to include in the results",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "MessageCreate", "ParticipantsLeave" ],
            "items" : {
              "type" : "string",
              "enum" : [ "MessageCreate", "ParticipantsJoin", "ParticipantsLeave" ]
            },
            "default" : [ "MessageCreate", "ParticipantsLeave", "ParticipantsJoin" ]
          },
          "x-ballerina-name" : "eventTypes"
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_events/{eventId}" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get DM event by ID",
        "description" : "Retrieves details of a specific direct message event by its ID.",
        "operationId" : "getDirectMessagesEventsById",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "dm event id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DmEventId"
          }
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmEventsEventIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Delete DM event",
        "description" : "Deletes a specific direct message event by its ID, if owned by the authenticated user.",
        "operationId" : "deleteDirectMessagesEvents",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "The ID of the direct-message event to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DmEventId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteDmResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "dm.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/evaluate_note" : {
      "post" : {
        "tags" : [ "Community Notes" ],
        "summary" : "Evaluate a Community Note",
        "description" : "Endpoint to evaluate a community note.",
        "externalDocs" : {
          "url" : "https://communitynotes.x.com/guide/api/overview"
        },
        "operationId" : "evaluateCommunityNotes",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EvaluateNoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EvaluateNoteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/insights8hr" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get 28-hour Post insights",
        "description" : "Retrieves engagement metrics for specified Posts over the last 28 hours.",
        "operationId" : "getInsights28Hr",
        "parameters" : [ {
          "name" : "tweet_ids",
          "in" : "query",
          "description" : "List of PostIds for 28hr metrics",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxItems" : 25,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "20" ],
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            }
          },
          "x-ballerina-name" : "tweetIds"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "granularity of metrics response",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "Total",
            "enum" : [ "Daily", "Hourly", "Weekly", "Total" ]
          }
        }, {
          "name" : "requested_metrics",
          "in" : "query",
          "description" : "request metrics for historical request",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AppInstallAttempts", "AppOpens", "DetailExpands", "EmailTweet", "Engagements", "Follows", "HashtagClicks", "Impressions", "Likes", "LinkClicks", "MediaEngagements", "MediaViews", "PermalinkClicks", "ProfileVisits", "QuoteTweets", "Replies", "Retweets", "UniqueVideoViews", "UrlClicks", "UserProfileClicks", "VideoCompletions", "VideoPlayed25Percent", "VideoPlayed50Percent", "VideoPlayed75Percent", "VideoStarts", "VideoViews" ]
            }
          },
          "x-ballerina-name" : "requestedMetrics"
        }, {
          "$ref" : "#/components/parameters/EngagementFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2Insights28hrResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/insights/historical" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get historical Post insights",
        "description" : "Retrieves historical engagement metrics for specified Posts within a defined time range.",
        "operationId" : "getInsightsHistorical",
        "parameters" : [ {
          "name" : "tweet_ids",
          "in" : "query",
          "description" : "List of PostIds for historical metrics",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxItems" : 25,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "20" ],
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            }
          },
          "x-ballerina-name" : "tweetIds"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the end of the time range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the start of the time range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "granularity of metrics response",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "Total",
            "enum" : [ "Daily", "Hourly", "Weekly", "Total" ]
          }
        }, {
          "name" : "requested_metrics",
          "in" : "query",
          "description" : "request metrics for historical request",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AppInstallAttempts", "AppOpens", "DetailExpands", "EmailTweet", "Engagements", "Follows", "HashtagClicks", "Impressions", "Likes", "LinkClicks", "MediaEngagements", "MediaViews", "PermalinkClicks", "ProfileVisits", "QuoteTweets", "Replies", "Retweets", "UniqueVideoViews", "UrlClicks", "UserProfileClicks", "VideoCompletions", "VideoPlayed25Percent", "VideoPlayed50Percent", "VideoPlayed75Percent", "VideoStarts", "VideoViews" ]
            }
          },
          "x-ballerina-name" : "requestedMetrics"
        }, {
          "$ref" : "#/components/parameters/EngagementFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2InsightsHistoricalResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/likes/compliance/stream" : {
      "get" : {
        "tags" : [ "Stream", "Compliance" ],
        "summary" : "Stream Likes compliance data",
        "description" : "Streams all compliance data related to Likes for Users.",
        "operationId" : "streamLikesCompliance",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Likes Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the Likes Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LikesComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/likes/firehose/stream" : {
      "get" : {
        "tags" : [ "Stream", "Likes" ],
        "summary" : "Stream all Likes",
        "description" : "Streams all public Likes in real-time.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-likes-firehose-stream"
        },
        "operationId" : "streamLikesFirehose",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Likes will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/LikeWithTweetAuthorFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/LikeWithTweetAuthorExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLikeResponseV2"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/likes/sample10/stream" : {
      "get" : {
        "tags" : [ "Stream", "Likes" ],
        "summary" : "Stream sampled Likes",
        "description" : "Streams a 10% sample of public Likes in real-time.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/likes/firehose/api-reference/get-likes-sample10-stream"
        },
        "operationId" : "streamLikesSample10",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Likes will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/LikeWithTweetAuthorFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/LikeWithTweetAuthorExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLikeResponseV2"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/lists" : {
      "post" : {
        "tags" : [ "Lists" ],
        "summary" : "Create List",
        "description" : "Creates a new List for the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists"
        },
        "operationId" : "createLists",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.read", "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}" : {
      "get" : {
        "tags" : [ "Lists" ],
        "summary" : "Get List by ID",
        "description" : "Retrieves details of a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-lists-id"
        },
        "operationId" : "getListsById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Lists" ],
        "summary" : "Update List",
        "description" : "Updates the details of a specific List owned by the authenticated user by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/put-lists-id"
        },
        "operationId" : "updateLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List to modify",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUpdateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Lists" ],
        "summary" : "Delete List",
        "description" : "Deletes a specific List owned by the authenticated user by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id"
        },
        "operationId" : "deleteLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/followers" : {
      "get" : {
        "tags" : [ "Lists", "Users" ],
        "summary" : "Get List followers",
        "description" : "Retrieves a list of Users who follow a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-followers"
        },
        "operationId" : "getListsFollowers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdFollowersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/members" : {
      "get" : {
        "tags" : [ "Lists", "Users" ],
        "summary" : "Get List members",
        "description" : "Retrieves a list of Users who are members of a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships"
        },
        "operationId" : "getListsMembers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdMembersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Lists" ],
        "summary" : "Add List member",
        "description" : "Adds a User to a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/post-lists-id-members"
        },
        "operationId" : "addListsMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List for which to add a member",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListAddUserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMutateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/members/{userId}" : {
      "delete" : {
        "tags" : [ "Lists" ],
        "summary" : "Remove List member",
        "description" : "Removes a User from a specific List by its ID and the Userâ€™s ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/delete-lists-id-members-user_id"
        },
        "operationId" : "removeListsMemberByUserId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List to remove a member",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of User that will be removed from the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMutateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/tweets" : {
      "get" : {
        "tags" : [ "Lists", "Tweets" ],
        "summary" : "Get List Posts",
        "description" : "Retrieves a list of Posts associated with a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-tweets/api-reference/get-lists-id-tweets"
        },
        "operationId" : "getListsPosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media" : {
      "get" : {
        "tags" : [ "Media" ],
        "summary" : "Get Media by media keys",
        "description" : "Retrieves details of Media files by their media keys.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "getMediaByMediaKeys",
        "parameters" : [ {
          "name" : "media_keys",
          "in" : "query",
          "description" : "A comma separated list of Media Keys. Up to 100 are allowed in a single request",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MediaKey"
            }
          },
          "x-ballerina-name" : "mediaKeys"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2MediaResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/analytics" : {
      "get" : {
        "tags" : [ "Media" ],
        "summary" : "Get Media analytics",
        "description" : "Retrieves analytics data for media.",
        "operationId" : "getMediaAnalytics",
        "parameters" : [ {
          "name" : "media_keys",
          "in" : "query",
          "description" : "A comma separated list of Media Keys. Up to 100 are allowed in a single request",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MediaKey"
            }
          },
          "x-ballerina-name" : "mediaKeys"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the end of the time range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the start of the time range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "The granularity for the search counts results",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "daily",
            "enum" : [ "hourly", "daily", "total" ]
          }
        }, {
          "$ref" : "#/components/parameters/MediaAnalyticsFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaAnalytics"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/metadata" : {
      "post" : {
        "tags" : [ "Media" ],
        "summary" : "Create Media metadata",
        "description" : "Creates metadata for a Media file.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-metadata-create#metadata-create"
        },
        "operationId" : "createMediaMetadata",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetadataCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetadataCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/subtitles" : {
      "post" : {
        "tags" : [ "Media" ],
        "summary" : "Create Media subtitles",
        "description" : "Creates subtitles for a specific Media file.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-subtitles-create"
        },
        "operationId" : "createMediaSubtitles",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubtitlesCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubtitlesCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Media" ],
        "summary" : "Delete Media subtitles",
        "description" : "Deletes subtitles for a specific Media file.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-subtitles-delete"
        },
        "operationId" : "deleteMediaSubtitles",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubtitlesDeleteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubtitlesDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/upload" : {
      "get" : {
        "tags" : [ "Media" ],
        "summary" : "Get Media upload status",
        "description" : "Retrieves the status of a Media upload by its ID.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload-status#media-upload-status"
        },
        "operationId" : "getMediaUploadStatus",
        "parameters" : [ {
          "name" : "media_id",
          "in" : "query",
          "description" : "Media id for the requested media upload status",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/MediaId"
          },
          "x-ballerina-name" : "mediaId"
        }, {
          "name" : "command",
          "in" : "query",
          "description" : "The command for the media upload request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "STATUS" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Media" ],
        "summary" : "Upload media",
        "description" : "Uploads a media file for use in posts or other content.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "mediaUpload",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadRequestOneShot"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadRequestOneShot"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/upload/initialize" : {
      "post" : {
        "tags" : [ "Media" ],
        "summary" : "Initialize media upload",
        "description" : "Initializes a media upload.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "initializeMediaUpload",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadConfigRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/upload/{id}/append" : {
      "post" : {
        "tags" : [ "Media" ],
        "summary" : "Append Media upload",
        "description" : "Appends data to a Media upload request.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "appendMediaUpload",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The media identifier for the media to perform the append operation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadAppendRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadAppendRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadAppendResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/upload/{id}/finalize" : {
      "post" : {
        "tags" : [ "Media" ],
        "summary" : "Finalize Media upload",
        "description" : "Finalizes a Media upload request.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "finalizeMediaUpload",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The media id of the targeted media to finalize",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "media.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/media/{mediaKey}" : {
      "get" : {
        "tags" : [ "Media" ],
        "summary" : "Get Media by media key",
        "description" : "Retrieves details of a specific Media file by its media key.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "getMediaByMediaKey",
        "parameters" : [ {
          "name" : "mediaKey",
          "in" : "path",
          "description" : "A single Media Key",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/MediaKey"
          }
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2MediaMediaKeyResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/notes" : {
      "post" : {
        "tags" : [ "Community Notes" ],
        "summary" : "Create a Community Note",
        "description" : "Creates a community note endpoint for LLM use case.",
        "externalDocs" : {
          "url" : "https://communitynotes.x.com/guide/api/overview"
        },
        "operationId" : "createCommunityNotes",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateNoteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateNoteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/notes/search/notes_written" : {
      "get" : {
        "tags" : [ "Community Notes" ],
        "summary" : "Search for Community Notes Written",
        "description" : "Returns all the community notes written by the user.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/community-notes/search-for-community-notes-written"
        },
        "operationId" : "searchCommunityNotesWritten",
        "parameters" : [ {
          "name" : "test_mode",
          "in" : "query",
          "description" : "If true, return the notes the caller wrote for the test. If false, return the notes the caller wrote on the product",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "testMode"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "Pagination token to get next set of posts eligible for notes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "Max results to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/NoteFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2NotesSearchNotesWrittenResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/notes/search/posts_eligible_for_notes" : {
      "get" : {
        "tags" : [ "Community Notes" ],
        "summary" : "Search for Posts Eligible for Community Notes",
        "description" : "Returns all the posts that are eligible for community notes.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/community-notes/search-for-posts-eligible-for-community-notes"
        },
        "operationId" : "searchEligiblePosts",
        "parameters" : [ {
          "name" : "test_mode",
          "in" : "query",
          "description" : "If true, return a list of posts that are for the test. If false, return a list of posts that the bots can write proposed notes on the product",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "testMode"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "Pagination token to get next set of posts eligible for notes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "Max results to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2NotesSearchPostsEligibleForNotesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/notes/{id}" : {
      "delete" : {
        "tags" : [ "Community Notes" ],
        "summary" : "Delete a Community Note",
        "description" : "Deletes a community note.",
        "externalDocs" : {
          "url" : "https://communitynotes.x.com/guide/api/overview"
        },
        "operationId" : "deleteCommunityNotes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The community note id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/NoteId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteNoteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/openapi.json" : {
      "get" : {
        "tags" : [ "General" ],
        "summary" : "Get OpenAPI Spec.",
        "description" : "Retrieves the full OpenAPI Specification in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)",
        "operationId" : "getOpenApiSpec",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/spaces" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Get Spaces by IDs",
        "description" : "Retrieves details of multiple Spaces by their IDs.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces"
        },
        "operationId" : "getSpacesByIds",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "The list of Space IDs to return",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "pattern" : "^[a-zA-Z0-9]{1,13}$",
              "type" : "string",
              "description" : "The unique identifier of this Space.",
              "example" : "1SLjjRYNejbKM"
            }
          }
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/by/creator_ids" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Get Spaces by creator IDs",
        "description" : "Retrieves details of Spaces created by specified User IDs.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids"
        },
        "operationId" : "getSpacesByCreatorIds",
        "parameters" : [ {
          "name" : "user_ids",
          "in" : "query",
          "description" : "The IDs of Users to search through",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "x-ballerina-name" : "userIds"
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesByCreatorIdsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/search" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Search Spaces",
        "description" : "Retrieves a list of Spaces matching the specified search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/search/api-reference/get-spaces-search"
        },
        "operationId" : "searchSpaces",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 2048,
            "minLength" : 1,
            "type" : "string",
            "example" : "crypto"
          },
          "example" : "crypto"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The state of Spaces to search for",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "all",
            "enum" : [ "live", "scheduled", "all" ]
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/{id}" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Get space by ID",
        "description" : "Retrieves details of a specific space by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id"
        },
        "operationId" : "getSpacesById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Space to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{1,13}$",
            "type" : "string",
            "description" : "The unique identifier of this Space.",
            "example" : "1SLjjRYNejbKM"
          },
          "example" : "1YqKDqWqdPLsV"
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/{id}/buyers" : {
      "get" : {
        "tags" : [ "Spaces", "Tweets" ],
        "summary" : "Get Space ticket buyers",
        "description" : "Retrieves a list of Users who purchased tickets to a specific Space by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers"
        },
        "operationId" : "getSpacesBuyers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Space to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{1,13}$",
            "type" : "string",
            "description" : "The unique identifier of this Space.",
            "example" : "1SLjjRYNejbKM"
          },
          "example" : "1YqKDqWqdPLsV"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdBuyersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/{id}/tweets" : {
      "get" : {
        "tags" : [ "Spaces", "Tweets" ],
        "summary" : "Get Space Posts",
        "description" : "Retrieves a list of Posts shared in a specific Space by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets"
        },
        "operationId" : "getSpacesPosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Space to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{1,13}$",
            "type" : "string",
            "description" : "The unique identifier of this Space.",
            "example" : "1SLjjRYNejbKM"
          },
          "example" : "1YqKDqWqdPLsV"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The number of Posts to fetch from the provided space. If not provided, the value will default to the maximum of 100",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "example" : 25,
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/trends/by/woeid/{woeid}" : {
      "get" : {
        "tags" : [ "Trends" ],
        "summary" : "Get Trends by WOEID",
        "description" : "Retrieves trending topics for a specific location identified by its WOEID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/trends/api-reference/get-trends-by-woeid"
        },
        "operationId" : "getTrendsByWoeid",
        "parameters" : [ {
          "name" : "woeid",
          "in" : "path",
          "description" : "The WOEID of the place to lookup a trend for",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_trends",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          },
          "x-ballerina-name" : "maxTrends"
        }, {
          "$ref" : "#/components/parameters/TrendFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TrendsByWoeidWoeidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get Posts by IDs",
        "description" : "Retrieves details of multiple Posts by their IDs.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets"
        },
        "operationId" : "getPostsByIds",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "A comma separated list of Post IDs. Up to 100 are allowed in a single request",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            }
          }
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Tweets" ],
        "summary" : "Create Post",
        "description" : "Creates a new Post for the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.x.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets"
        },
        "operationId" : "createPosts",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TweetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/analytics" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get Post analytics",
        "description" : "Retrieves analytics data for specified Posts within a defined time range.",
        "operationId" : "getPostsAnalytics",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "A comma separated list of Post IDs. Up to 100 are allowed in a single request",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            }
          }
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the end of the time range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the start of the time range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "The granularity for the search counts results",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "total",
            "enum" : [ "hourly", "daily", "weekly", "total" ]
          }
        }, {
          "$ref" : "#/components/parameters/AnalyticsFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Analytics"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/compliance/stream" : {
      "get" : {
        "tags" : [ "Stream", "Compliance" ],
        "summary" : "Stream Posts compliance data",
        "description" : "Streams all compliance data related to Posts.",
        "operationId" : "streamPostsCompliance",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Post Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Post Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/counts/all" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get count of all Posts",
        "description" : "Retrieves the count of Posts matching a search query from the full archive.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all"
        },
        "operationId" : "getPostsCountsAll",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "The granularity for the search counts results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "hour",
            "enum" : [ "minute", "hour", "day" ]
          }
        }, {
          "$ref" : "#/components/parameters/SearchCountFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsCountsAllResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/counts/recent" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get count of recent Posts",
        "description" : "Retrieves the count of Posts from the last 7 days matching a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-recent"
        },
        "operationId" : "getPostsCountsRecent",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "The granularity for the search counts results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "hour",
            "enum" : [ "minute", "hour", "day" ]
          }
        }, {
          "$ref" : "#/components/parameters/SearchCountFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsCountsRecentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/firehose/stream" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream all Posts",
        "description" : "Streams all public Posts in real-time.",
        "operationId" : "streamPostsFirehose",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/en" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream English Posts",
        "description" : "Streams all public English-language Posts in real-time.",
        "operationId" : "streamPostsFirehoseEn",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 8,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/ja" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream Japanese Posts",
        "description" : "Streams all public Japanese-language Posts in real-time.",
        "operationId" : "streamPostsFirehoseJa",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/ko" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream Korean Posts",
        "description" : "Streams all public Korean-language Posts in real-time.",
        "operationId" : "streamPostsFirehoseKo",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/pt" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream Portuguese Posts",
        "description" : "Streams all public Portuguese-language Posts in real-time.",
        "operationId" : "streamPostsFirehosePt",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/label/stream" : {
      "get" : {
        "tags" : [ "Stream", "Compliance" ],
        "summary" : "Stream Post labels",
        "description" : "Streams all labeling events applied to Posts.",
        "operationId" : "streamLabelsCompliance",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Post labels will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the Post labels will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetLabelStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/sample/stream" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream sampled Posts",
        "description" : "Streams a 1% sample of public Posts in real-time.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/volume-streams/api-reference/get-tweets-sample-stream"
        },
        "operationId" : "streamPostsSample",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/sample10/stream" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream 10% sampled Posts",
        "description" : "Streams a 10% sample of public Posts in real-time.",
        "operationId" : "streamPostsSample10",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSample10StreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/search/all" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Search all Posts",
        "description" : "Retrieves Posts from the full archive matching a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all"
        },
        "operationId" : "searchPostsAll",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of search results to be returned by a request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "sort_order",
          "in" : "query",
          "description" : "This order in which to return results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "recency", "relevancy" ]
          },
          "x-ballerina-name" : "sortOrder"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchAllResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/search/recent" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Search recent Posts",
        "description" : "Retrieves Posts from the last 7 days matching a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent"
        },
        "operationId" : "searchPostsRecent",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of search results to be returned by a request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "sort_order",
          "in" : "query",
          "description" : "This order in which to return results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "recency", "relevancy" ]
          },
          "x-ballerina-name" : "sortOrder"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchRecentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/search/stream" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Stream filtered Posts",
        "description" : "Streams Posts in real-time matching the active rule set.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream"
        },
        "operationId" : "streamPosts",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilteredStreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/search/stream/rules" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Get stream rules",
        "description" : "Retrieves the active rule set or a subset of rules for the filtered stream.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules"
        },
        "operationId" : "getRules",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "A comma-separated list of Rule IDs",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleId"
            }
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1000
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This value is populated by passing the 'next_token' returned in a request to paginate through results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 16,
            "minLength" : 16,
            "type" : "string"
          },
          "x-ballerina-name" : "paginationToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RulesLookupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Update stream rules",
        "description" : "Adds or deletes rules from the active rule set for the filtered stream.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/post-tweets-search-stream-rules"
        },
        "operationId" : "updateRules",
        "parameters" : [ {
          "name" : "dry_run",
          "in" : "query",
          "description" : "Dry Run can be used with both the add and delete action, with the expected result given, but without actually taking any action in the system (meaning the end state will always be as it was when the request was submitted). This is particularly useful to validate rule changes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "dryRun"
        }, {
          "name" : "delete_all",
          "in" : "query",
          "description" : "Delete All can be used to delete all of the rules associated this client app, it should be specified with no other parameters. Once deleted, rules cannot be recovered",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "deleteAll"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddOrDeleteRulesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddOrDeleteRulesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/search/stream/rules/counts" : {
      "get" : {
        "tags" : [ "Stream", "Tweets" ],
        "summary" : "Get stream rule counts",
        "description" : "Retrieves the count of rules in the active rule set for the filtered stream.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules-counts"
        },
        "operationId" : "getRuleCounts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/RulesCountFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchStreamRulesCountsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/search/webhooks" : {
      "get" : {
        "tags" : [ "Webhooks", "Stream" ],
        "summary" : "Get stream links",
        "description" : "Get a list of webhook links associated with a filtered stream ruleset.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "getWebhooksStreamLinks",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookLinksGetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/search/webhooks/{webhookId}" : {
      "post" : {
        "tags" : [ "Webhooks", "Stream" ],
        "summary" : "Create stream link",
        "description" : "Creates a link to deliver FilteredStream events to the given webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "createWebhooksStreamLink",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The webhook ID to link to your FilteredStream ruleset",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        }, {
          "name" : "tweet.fields",
          "in" : "query",
          "description" : "A comma separated list of Tweet fields to display",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "tweetFields"
        }, {
          "name" : "expansions",
          "in" : "query",
          "description" : "A comma separated list of fields to expand",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "media.fields",
          "in" : "query",
          "description" : "A comma separated list of Media fields to display",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "mediaFields"
        }, {
          "name" : "poll.fields",
          "in" : "query",
          "description" : "A comma separated list of Poll fields to display",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pollFields"
        }, {
          "name" : "user.fields",
          "in" : "query",
          "description" : "A comma separated list of User fields to display",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "userFields"
        }, {
          "name" : "place.fields",
          "in" : "query",
          "description" : "A comma separated list of Place fields to display",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "placeFields"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookLinksCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Webhooks", "Stream" ],
        "summary" : "Delete stream link",
        "description" : "Deletes a link from FilteredStream events to the given webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "deleteWebhooksStreamLink",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The webhook ID to link to your FilteredStream ruleset",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookLinksDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get Post by ID",
        "description" : "Retrieves details of a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id"
        },
        "operationId" : "getPostsById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Tweets" ],
        "summary" : "Delete Post",
        "description" : "Deletes a specific Post by its ID, if owned by the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/delete-tweets-id"
        },
        "operationId" : "deletePosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Post to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/liking_users" : {
      "get" : {
        "tags" : [ "Tweets", "Users" ],
        "summary" : "Get Liking Users",
        "description" : "Retrieves a list of Users who liked a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-tweets-id-liking_users"
        },
        "operationId" : "getPostsLikingUsers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdLikingUsersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/quote_tweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get Quoted Posts",
        "description" : "Retrieves a list of Posts that quote a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/quote-tweets/api-reference/get-tweets-id-quote_tweets"
        },
        "operationId" : "getPostsQuotedPosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets')",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "replies", "retweets" ],
            "items" : {
              "type" : "string",
              "enum" : [ "replies", "retweets" ]
            }
          }
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdQuoteTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/retweeted_by" : {
      "get" : {
        "tags" : [ "Tweets", "Users" ],
        "summary" : "Get Reposted by",
        "description" : "Retrieves a list of Users who reposted a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/get-tweets-id-retweeted_by"
        },
        "operationId" : "getPostsRepostedBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdRetweetedByResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/retweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Get Reposts",
        "description" : "Retrieves a list of Posts that repost a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/get-tweets-id-retweets"
        },
        "operationId" : "getPostsReposts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdRetweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{tweetId}/hidden" : {
      "put" : {
        "tags" : [ "Tweets" ],
        "summary" : "Hide reply",
        "description" : "Hides or unhides a reply to a conversation owned by the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/hide-replies/api-reference/put-tweets-id-hidden"
        },
        "operationId" : "hidePostsReply",
        "parameters" : [ {
          "name" : "tweetId",
          "in" : "path",
          "description" : "The ID of the reply that you want to hide or unhide",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TweetHideRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetHideResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.moderate.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/usage/tweets" : {
      "get" : {
        "tags" : [ "Usage" ],
        "summary" : "Get usage",
        "description" : "Retrieves usage statistics for Posts over a specified number of days.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/usage/tweets/api-reference/get-usage-tweets"
        },
        "operationId" : "getUsage",
        "parameters" : [ {
          "name" : "days",
          "in" : "query",
          "description" : "The number of days for which you need usage for",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 90,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 7
          }
        }, {
          "$ref" : "#/components/parameters/UsageFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsageTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get Users by IDs",
        "description" : "Retrieves details of multiple Users by their IDs.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users"
        },
        "operationId" : "getUsersByIds",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "A list of User IDs, comma-separated. You can specify up to 100 IDs",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "example" : "2244994945,6253282,12"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/by" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get Users by usernames",
        "description" : "Retrieves details of multiple Users by their usernames.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by"
        },
        "operationId" : "getUsersByUsernames",
        "parameters" : [ {
          "name" : "usernames",
          "in" : "query",
          "description" : "A list of usernames, comma-separated",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "example" : "TwitterDev,TwitterAPI",
            "items" : {
              "pattern" : "^[A-Za-z0-9_]{1,15}$",
              "type" : "string",
              "description" : "The X handle (screen name) of this User."
            }
          }
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersByResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/by/username/{username}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get User by username",
        "description" : "Retrieves details of a specific User by their username.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username"
        },
        "operationId" : "getUsersByUsername",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "A username",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[A-Za-z0-9_]{1,15}$",
            "type" : "string"
          },
          "example" : "TwitterDev"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersByUsernameUsernameResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/compliance/stream" : {
      "get" : {
        "tags" : [ "Stream", "Compliance" ],
        "summary" : "Stream Users compliance data",
        "description" : "Streams all compliance data related to Users.",
        "operationId" : "streamUsersCompliance",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the User Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the User Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/users/me" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get my User",
        "description" : "Retrieves details of the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me"
        },
        "operationId" : "getUsersMe",
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersMeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/personalized_trends" : {
      "get" : {
        "tags" : [ "Trends" ],
        "summary" : "Get personalized Trends",
        "description" : "Retrieves personalized trending topics for the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.x.com/"
        },
        "operationId" : "getTrendsPersonalizedTrends",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PersonalizedTrendFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersPersonalizedTrendsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/reposts_of_me" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get Reposts of me",
        "description" : "Retrieves a list of Posts that repost content from the authenticated user.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/posts/retweets/quickstart/retweets-of-me#retweets-of-me"
        },
        "operationId" : "getUsersRepostsOfMe",
        "parameters" : [ {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersRepostsOfMeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "timeline.read", "tweet.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/search" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Search Users",
        "description" : "Retrieves a list of Users matching a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-search"
        },
        "operationId" : "searchUsers",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "TThe the query string by which to query for users",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/UserSearchQueryVnext"
          },
          "example" : "someXUser"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get User by ID",
        "description" : "Retrieves details of a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-id"
        },
        "operationId" : "getUsersById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/blocking" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get blocking",
        "description" : "Retrieves a list of Users blocked by the specified User ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/get-users-blocking"
        },
        "operationId" : "getUsersBlocking",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdBlockingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "block.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/bookmarks" : {
      "get" : {
        "tags" : [ "Users", "Bookmarks" ],
        "summary" : "Get Bookmarks",
        "description" : "Retrieves a list of Posts bookmarked by the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/get-users-id-bookmarks"
        },
        "operationId" : "getUsersBookmarks",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdBookmarksResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.read", "tweet.read", "users.read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Users", "Bookmarks" ],
        "summary" : "Create Bookmark",
        "description" : "Adds a post to the authenticated userâ€™s bookmarks.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/post-users-id-bookmarks"
        },
        "operationId" : "createUsersBookmark",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to add bookmarks",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookmarkAddRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.write", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/users/{id}/bookmarks/folders" : {
      "get" : {
        "tags" : [ "Users", "Bookmarks" ],
        "summary" : "Get Bookmark folders",
        "description" : "Retrieves a list of Bookmark folders created by the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "getUsersBookmarkFolders",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkFoldersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.read", "users.read" ]
        } ]
      }
    },
    "/users/{id}/bookmarks/folders/{folderId}" : {
      "get" : {
        "tags" : [ "Users", "Bookmarks" ],
        "summary" : "Get Bookmarks by folder ID",
        "description" : "Retrieves Posts in a specific Bookmark folder by its ID for the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "getUsersBookmarksByFolderId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "folderId",
          "in" : "path",
          "description" : "The ID of the Bookmark Folder that the authenticated User is trying to fetch Posts for",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/BookmarkFolderId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkFolderPostsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/users/{id}/bookmarks/{tweetId}" : {
      "delete" : {
        "tags" : [ "Users", "Bookmarks" ],
        "summary" : "Delete Bookmark",
        "description" : "Removes a Post from the authenticated userâ€™s Bookmarks by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/delete-users-id-bookmarks-tweet_id"
        },
        "operationId" : "deleteUsersBookmark",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User whose bookmark is to be removed",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "tweetId",
          "in" : "path",
          "description" : "The ID of the Post that the source User is removing from bookmarks",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.write", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/users/{id}/dm/block" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Block DMs",
        "description" : "Blocks direct messages to or from a specific User by their ID for the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.x.com/"
        },
        "operationId" : "blockUsersDms",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the target User that the authenticated user requesting to block dms for",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersDMBlockCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/dm/unblock" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Unblock DMs",
        "description" : "Unblocks direct messages to or from a specific User by their ID for the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.x.com/"
        },
        "operationId" : "unblockUsersDms",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the target User that the authenticated user requesting to unblock dms for",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersDMUnBlockCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/followed_lists" : {
      "get" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Get followed Lists",
        "description" : "Retrieves a list of Lists followed by a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/get-users-id-followed_lists"
        },
        "operationId" : "getUsersFollowedLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Follow List",
        "description" : "Causes the authenticated user to follow a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/post-users-id-followed-lists"
        },
        "operationId" : "followList",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that will follow the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListFollowedRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListFollowedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/followed_lists/{listId}" : {
      "delete" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Unfollow List",
        "description" : "Causes the authenticated user to unfollow a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/delete-users-id-followed-lists-list_id"
        },
        "operationId" : "unfollowList",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that will unfollow the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "listId",
          "in" : "path",
          "description" : "The ID of the List to unfollow",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListFollowedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/followers" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get followers",
        "description" : "Retrieves a list of Users who follow a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-followers"
        },
        "operationId" : "getUsersFollowers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "follows.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/following" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get following",
        "description" : "Retrieves a list of Users followed by a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-following"
        },
        "operationId" : "getUsersFollowing",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "follows.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Follow User",
        "description" : "Causes the authenticated user to follow a specific user by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/post-users-source_user_id-following"
        },
        "operationId" : "followUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to follow the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersFollowingCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersFollowingCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "follows.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/liked_tweets" : {
      "get" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Get liked Posts",
        "description" : "Retrieves a list of Posts liked by a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-users-id-liked_tweets"
        },
        "operationId" : "getUsersLikedPosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdLikedTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/likes" : {
      "post" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Like Post",
        "description" : "Causes the authenticated user to Like a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/post-users-id-likes"
        },
        "operationId" : "likePost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to like the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersLikesCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersLikesCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/likes/{tweetId}" : {
      "delete" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Unlike Post",
        "description" : "Causes the authenticated user to Unlike a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/delete-users-id-likes-tweet_id"
        },
        "operationId" : "unlikePost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to unlike the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "tweetId",
          "in" : "path",
          "description" : "The ID of the Post that the User is requesting to unlike",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersLikesDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/list_memberships" : {
      "get" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Get List memberships",
        "description" : "Retrieves a list of Lists that a specific User is a member of by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships"
        },
        "operationId" : "getUsersListMemberships",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdListMembershipsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/mentions" : {
      "get" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Get mentions",
        "description" : "Retrieves a list of Posts that mention a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions"
        },
        "operationId" : "getUsersMentions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "1346889436626259968",
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdMentionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/muting" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get muting",
        "description" : "Retrieves a list of Users muted by the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/get-users-muting"
        },
        "operationId" : "getUsersMuting",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdMutingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "mute.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Mute User",
        "description" : "Causes the authenticated user to mute a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/post-users-user_id-muting"
        },
        "operationId" : "muteUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to mute the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MuteUserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MuteUserMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "mute.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/owned_lists" : {
      "get" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Get owned Lists",
        "description" : "Retrieves a list of Lists owned by a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-users-id-owned_lists"
        },
        "operationId" : "getUsersOwnedLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdOwnedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/pinned_lists" : {
      "get" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Get pinned Lists",
        "description" : "Retrieves a list of Lists pinned by the authenticated user.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/get-users-id-pinned_lists"
        },
        "operationId" : "getUsersPinnedLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdPinnedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Pin List",
        "description" : "Causes the authenticated user to pin a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/post-users-id-pinned-lists"
        },
        "operationId" : "pinList",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that will pin the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListPinnedRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListPinnedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/pinned_lists/{listId}" : {
      "delete" : {
        "tags" : [ "Users", "Lists" ],
        "summary" : "Unpin List",
        "description" : "Causes the authenticated user to unpin a specific List by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/delete-users-id-pinned-lists-list_id"
        },
        "operationId" : "unpinList",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "listId",
          "in" : "path",
          "description" : "The ID of the List to unpin",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUnpinResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/retweets" : {
      "post" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Repost Post",
        "description" : "Causes the authenticated user to repost a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/post-users-id-retweets"
        },
        "operationId" : "repostPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to repost the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersRetweetsCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersRetweetsCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/retweets/{sourceTweetId}" : {
      "delete" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Unrepost Post",
        "description" : "Causes the authenticated user to unrepost a specific Post by its ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/delete-users-id-retweets-tweet_id"
        },
        "operationId" : "unrepostPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to repost the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "sourceTweetId",
          "in" : "path",
          "description" : "The ID of the Post that the User is requesting to unretweet",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersRetweetsDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/timelines/reverse_chronological" : {
      "get" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Get Timeline",
        "description" : "Retrieves a reverse chronological list of Posts in the authenticated Userâ€™s Timeline.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-reverse-chronological"
        },
        "operationId" : "getUsersTimeline",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User to list Reverse Chronological Timeline Posts of",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "791775337160081409",
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "1346889436626259968",
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets')",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "replies", "retweets" ],
            "items" : {
              "type" : "string",
              "enum" : [ "replies", "retweets" ]
            }
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdTimelinesReverseChronologicalResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/tweets" : {
      "get" : {
        "tags" : [ "Users", "Tweets" ],
        "summary" : "Get Posts",
        "description" : "Retrieves a list of posts authored by a specific User by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets"
        },
        "operationId" : "getUsersPosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "791775337160081409",
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "1346889436626259968",
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets')",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "replies", "retweets" ],
            "items" : {
              "type" : "string",
              "enum" : [ "replies", "retweets" ]
            }
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{sourceUserId}/following/{targetUserId}" : {
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Unfollow User",
        "description" : "Causes the authenticated user to unfollow a specific user by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/delete-users-source_id-following"
        },
        "operationId" : "unfollowUser",
        "parameters" : [ {
          "name" : "sourceUserId",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to unfollow the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "targetUserId",
          "in" : "path",
          "description" : "The ID of the User that the source User is requesting to unfollow",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersFollowingDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "follows.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{sourceUserId}/muting/{targetUserId}" : {
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Unmute User",
        "description" : "Causes the authenticated user to unmute a specific user by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/delete-users-user_id-muting"
        },
        "operationId" : "unmuteUser",
        "parameters" : [ {
          "name" : "sourceUserId",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to unmute the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "targetUserId",
          "in" : "path",
          "description" : "The ID of the User that the source User is requesting to unmute",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MuteUserMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "mute.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/webhooks" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Get webhook",
        "description" : "Get a list of webhook configs associated with a client app.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "getWebhooks",
        "parameters" : [ {
          "$ref" : "#/components/parameters/WebhookConfigFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2WebhooksResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Create webhook",
        "description" : "Creates a new webhook configuration.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "createWebhooks",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookConfigCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookConfigCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/webhooks/{webhookId}" : {
      "put" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Validate webhook",
        "description" : "Triggers a CRC check for a given webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "validateWebhooks",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The ID of the webhook to check",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookConfigPutResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Delete webhook",
        "description" : "Deletes an existing webhook configuration.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "deleteWebhooks",
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "The ID of the webhook to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookConfigDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "SubtitleLanguageCode" : {
        "pattern" : "^[A-Z]{2}$",
        "type" : "string",
        "description" : "The language code should be a BCP47 code (e.g. 'EN\", \"SP\")",
        "example" : "EN"
      },
      "Get2InsightsHistoricalResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Engagement"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubscriptionsGetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionsCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListPinnedRequest" : {
        "required" : [ "list_id" ],
        "type" : "object",
        "properties" : {
          "list_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListId"
            } ],
            "x-ballerina-name" : "listId"
          }
        }
      },
      "Get2TweetsCountsAllResponseMeta" : {
        "type" : "object",
        "properties" : {
          "total_tweet_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Aggregate"
            } ],
            "x-ballerina-name" : "totalTweetCount"
          },
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          }
        }
      },
      "Get2TweetsFirehoseStreamLangKoResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UnlikeComplianceSchema" : {
        "required" : [ "event_at", "favorite" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "favorite" : {
            "$ref" : "#/components/schemas/UnlikeComplianceSchemaFavorite"
          }
        }
      },
      "HttpStatusCode" : {
        "maximum" : 599,
        "minimum" : 100,
        "type" : "integer",
        "description" : "HTTP Status Code"
      },
      "UserScrubGeoObjectSchema" : {
        "required" : [ "event_at", "up_to_tweet_id", "user" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserComplianceSchemaUser"
          },
          "up_to_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "upToTweetId"
          }
        }
      },
      "CreateComplianceJobRequest" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "resumable" : {
            "type" : "boolean",
            "description" : "If true, this endpoint will return a pre-signed URL with resumable uploads enabled"
          },
          "name" : {
            "$ref" : "#/components/schemas/ComplianceJobName"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of compliance job to list",
            "enum" : [ "tweets", "users" ]
          }
        },
        "description" : "A request to create a new batch compliance job"
      },
      "TweetCreateRequestMedia" : {
        "required" : [ "media_ids" ],
        "type" : "object",
        "properties" : {
          "media_ids" : {
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Media Ids to be attached to a created Tweet",
            "items" : {
              "$ref" : "#/components/schemas/MediaId"
            },
            "x-ballerina-name" : "mediaIds"
          },
          "tagged_user_ids" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of User Ids to be tagged in the media for created Tweet",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "taggedUserIds"
          }
        },
        "additionalProperties" : false,
        "description" : "Media information being attached to created Tweet. This is mutually exclusive from Quote Tweet Id, Poll, and Card URI"
      },
      "Space" : {
        "required" : [ "id", "state" ],
        "type" : "object",
        "properties" : {
          "topics" : {
            "type" : "array",
            "description" : "The topics of a Space, as selected by its creator",
            "items" : {
              "$ref" : "#/components/schemas/SpaceTopics"
            }
          },
          "scheduled_start" : {
            "type" : "string",
            "description" : "A date time stamp for when a Space is scheduled to begin",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "scheduledStart"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Space",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "createdAt"
          },
          "is_ticketed" : {
            "type" : "boolean",
            "description" : "Denotes if the Space is a ticketed Space",
            "example" : false,
            "x-ballerina-name" : "isTicketed"
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the Space",
            "example" : "Spaces are Awesome"
          },
          "invited_user_ids" : {
            "type" : "array",
            "description" : "An array of user ids for people who were invited to a Space",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "invitedUserIds"
          },
          "speaker_ids" : {
            "type" : "array",
            "description" : "An array of user ids for people who were speakers in a Space",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "speakerIds"
          },
          "participant_count" : {
            "type" : "integer",
            "description" : "The number of participants in a Space",
            "format" : "int32",
            "example" : 10,
            "x-ballerina-name" : "participantCount"
          },
          "updated_at" : {
            "type" : "string",
            "description" : "When the Space was last updated",
            "format" : "date-time",
            "x-ballerina-name" : "updatedAt"
          },
          "subscriber_count" : {
            "type" : "integer",
            "description" : "The number of people who have either purchased a ticket or set a reminder for this Space",
            "format" : "int32",
            "example" : 10,
            "x-ballerina-name" : "subscriberCount"
          },
          "creator_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "creatorId"
          },
          "started_at" : {
            "type" : "string",
            "description" : "When the Space was started as a date string",
            "format" : "date-time",
            "x-ballerina-name" : "startedAt"
          },
          "host_ids" : {
            "type" : "array",
            "description" : "The user ids for the hosts of the Space",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "hostIds"
          },
          "id" : {
            "$ref" : "#/components/schemas/SpaceId"
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the Space",
            "example" : "live",
            "enum" : [ "live", "scheduled", "ended" ]
          },
          "lang" : {
            "type" : "string",
            "description" : "The language of the Space",
            "example" : "en"
          },
          "ended_at" : {
            "type" : "string",
            "description" : "End time of the Space",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "endedAt"
          }
        },
        "description" : ""
      },
      "UsersRetweetsCreateRequest" : {
        "required" : [ "tweet_id" ],
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          }
        },
        "additionalProperties" : false
      },
      "UsersDMBlockCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "blocked" : {
            "type" : "boolean"
          }
        }
      },
      "ListPinnedResponseData" : {
        "type" : "object",
        "properties" : {
          "pinned" : {
            "type" : "boolean"
          }
        }
      },
      "ContextAnnotation" : {
        "required" : [ "domain", "entity" ],
        "type" : "object",
        "properties" : {
          "domain" : {
            "$ref" : "#/components/schemas/ContextAnnotationDomainFields"
          },
          "entity" : {
            "$ref" : "#/components/schemas/ContextAnnotationEntityFields"
          }
        },
        "description" : "Annotation inferred from the Tweet text"
      },
      "Get2ListsIdMembersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UrlEntity" : {
        "description" : "Represent the portion of text recognized as a URL, and its start and end position within the text",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/UrlFields"
        } ]
      },
      "InvalidRequestProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvalidRequestProblemErrors"
            }
          }
        }
      },
      "MediaSegmentsMediaSegmentsOneOf12" : {
        "pattern" : "^[0-9]{1,3}$",
        "type" : "string",
        "description" : "An integer value representing the media upload segment",
        "format" : "integer"
      },
      "Get2MediaResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Media"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MentionFields" : {
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          }
        },
        "description" : "Represent the portion of text recognized as a User mention, and its start and end position within the text"
      },
      "BookmarkFolderId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this Bookmark folder",
        "example" : "1146654567674912769"
      },
      "Note" : {
        "required" : [ "id", "note_info", "post_id" ],
        "type" : "object",
        "properties" : {
          "post_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "postId"
          },
          "test_result" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NoteTestResult"
            } ],
            "x-ballerina-name" : "testResult"
          },
          "id" : {
            "$ref" : "#/components/schemas/NoteId"
          },
          "info" : {
            "$ref" : "#/components/schemas/NoteInfo"
          },
          "status" : {
            "$ref" : "#/components/schemas/NoteRatingStatus"
          }
        },
        "description" : "A X Community Note is a note on a Post"
      },
      "PlaidName" : {
        "required" : [ "first", "last" ],
        "type" : "object",
        "properties" : {
          "last" : {
            "type" : "string",
            "description" : "The last name of the account holder"
          },
          "first" : {
            "type" : "string",
            "description" : "The first name of the account holder"
          }
        },
        "description" : "Name information for the account holder"
      },
      "Get2NotesSearchNotesWrittenResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2NotesSearchNotesWrittenResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListUpdateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListUpdateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetGeo" : {
        "type" : "object",
        "properties" : {
          "coordinates" : {
            "$ref" : "#/components/schemas/Point"
          },
          "place_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PlaceId"
            } ],
            "x-ballerina-name" : "placeId"
          }
        },
        "description" : "The location tagged on the Tweet, if the user provided one"
      },
      "DmEventAttachments" : {
        "type" : "object",
        "properties" : {
          "media_keys" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Media Keys for each one of the media attachments (if media are attached)",
            "items" : {
              "$ref" : "#/components/schemas/MediaKey"
            },
            "x-ballerina-name" : "mediaKeys"
          },
          "card_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of card IDs (if cards are attached)",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "cardIds"
          }
        },
        "description" : "Specifies the type of attachments (if any) present in this DM"
      },
      "Get2UsersSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersSearchResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "EngagementMeasurement" : {
        "type" : "object",
        "properties" : {
          "metrics_time_series" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EngagementMeasurementMetricsTimeSeries"
            },
            "x-ballerina-name" : "metricsTimeSeries"
          },
          "metrics_total" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EngagementMeasurementMetricsTotal"
            },
            "x-ballerina-name" : "metricsTotal"
          }
        }
      },
      "ClientForbiddenProblem" : {
        "description" : "A problem that indicates your client is forbidden from making this request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ClientForbiddenProblemAllOf2"
        } ]
      },
      "Get2TweetsFirehoseStreamLangEnResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "FieldUnauthorizedProblem" : {
        "description" : "A problem that indicates that you are not allowed to see a particular field on a Tweet, User, etc",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/FieldUnauthorizedProblemAllOf2"
        } ]
      },
      "CreateNoteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CreateNoteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DmEvent" : {
        "required" : [ "event_type", "id" ],
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmEventAttachments"
          },
          "hashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "referenced_tweets" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Posts this DM refers to",
            "items" : {
              "$ref" : "#/components/schemas/DmEventReferencedTweets"
            },
            "x-ballerina-name" : "referencedTweets"
          },
          "participant_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of participants for a ParticipantsJoin or ParticipantsLeave event_type",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "participantIds"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "sender_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "senderId"
          },
          "cashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntityDm"
            }
          },
          "dm_conversation_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmConversationId"
            } ],
            "x-ballerina-name" : "dmConversationId"
          },
          "event_type" : {
            "type" : "string",
            "example" : "MessageCreate",
            "x-ballerina-name" : "eventType"
          },
          "mentions" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/DmEventId"
          },
          "text" : {
            "type" : "string"
          }
        }
      },
      "FilteredStreamingTweetResponseMatchingRules" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/RuleId"
          },
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          }
        }
      },
      "LikeComplianceSchema" : {
        "required" : [ "delete" ],
        "type" : "object",
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/UnlikeComplianceSchema"
          }
        }
      },
      "Get2TweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "PlaidCurrency" : {
        "required" : [ "currencyCode" ],
        "type" : "object",
        "properties" : {
          "currencyCode" : {
            "type" : "string",
            "description" : "The ISO 4217 currency code"
          }
        },
        "description" : "Currency information"
      },
      "AllProjectClientApps" : {
        "type" : "array",
        "description" : "Client App Rule Counts for all applications in the project",
        "items" : {
          "$ref" : "#/components/schemas/AppRulesCount"
        }
      },
      "SubtitlesDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteNoteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DisallowedResourceProblemAllOf2" : {
        "required" : [ "resource_id", "resource_type", "section" ],
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          },
          "section" : {
            "type" : "string",
            "enum" : [ "data", "includes" ]
          }
        }
      },
      "EngagementMeasurementValue" : {
        "type" : "object",
        "properties" : {
          "metric_values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EngagementMeasurementValueMetricValues"
            },
            "x-ballerina-name" : "metricValues"
          },
          "timestamp" : {
            "$ref" : "#/components/schemas/EngagementMeasurementValueTimestamp"
          }
        }
      },
      "MediaUploadAppendRequestAnyOf1" : {
        "required" : [ "media", "segment_index" ],
        "type" : "object",
        "properties" : {
          "segment_index" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaSegments"
            } ],
            "x-ballerina-name" : "segmentIndex"
          },
          "media" : {
            "$ref" : "#/components/schemas/MediaPayloadBinary"
          }
        }
      },
      "MediaUploadAppendRequest" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/MediaUploadAppendRequestAnyOf1"
        }, {
          "$ref" : "#/components/schemas/MediaUploadAppendRequestMediaUploadAppendRequestAnyOf12"
        } ]
      },
      "NoteRatingStatus" : {
        "type" : "string",
        "description" : "Community Note rating status",
        "enum" : [ "currently_rated_helpful", "currently_rated_not_helpful", "firm_reject", "insufficient_consensus", "minimum_ratings_not_met", "needs_more_ratings", "needs_your_help" ]
      },
      "WebhookConfigCreateRequest" : {
        "required" : [ "url" ],
        "type" : "object",
        "properties" : {
          "url" : {
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "CommunityId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this Community",
        "example" : "1146654567674912769"
      },
      "AnnotationsAllOf2" : {
        "type" : "object",
        "properties" : {
          "probability" : {
            "maximum" : 1,
            "minimum" : 0,
            "type" : "number",
            "description" : "Confidence factor for annotation type",
            "format" : "double"
          },
          "normalized_text" : {
            "type" : "string",
            "description" : "Text used to determine annotation",
            "example" : "Barack Obama",
            "x-ballerina-name" : "normalizedText"
          },
          "type" : {
            "type" : "string",
            "description" : "Annotation type",
            "example" : "Person"
          }
        },
        "description" : "Represents the data for the annotation"
      },
      "EngagementErrors" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "tweets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Expansions" : {
        "type" : "object",
        "properties" : {
          "places" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Place"
            }
          },
          "topics" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Topic"
            }
          },
          "polls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Poll"
            }
          },
          "media" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Media"
            }
          },
          "tweets" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "users" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "LikesComplianceStreamResponseLikesComplianceStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DomainRestrictions" : {
        "required" : [ "whitelist" ],
        "type" : "object",
        "properties" : {
          "whitelist" : {
            "type" : "array",
            "description" : "List of whitelisted domains",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UserDeleteComplianceSchema" : {
        "required" : [ "user_delete" ],
        "type" : "object",
        "properties" : {
          "user_delete" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userDelete"
          }
        }
      },
      "Get2TweetsIdQuoteTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2NotesSearchNotesWrittenResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "PlaidAccountTransaction" : {
        "required" : [ "accountCategory", "amount", "debitCreditMemo", "description", "status", "transactionId", "transactionTimestamp" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "description" : "The amount transacted"
          },
          "accountCategory" : {
            "type" : "string",
            "description" : "The category of the account (e.g., personal, business)"
          },
          "debitCreditMemo" : {
            "type" : "string",
            "description" : "Memo for transaction (e.g. CREDIT)"
          },
          "description" : {
            "type" : "string",
            "description" : "The transaction description"
          },
          "postedTimestamp" : {
            "type" : "string",
            "description" : "The timestamp when the transaction was posted"
          },
          "transactionId" : {
            "type" : "string",
            "description" : "The identifier for the transaction"
          },
          "transactionTimestamp" : {
            "type" : "string",
            "description" : "The timestamp when the transaction occurred"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the transaction"
          }
        },
        "description" : "Descriptor for a Plaid account"
      },
      "EvaluateNoteRequest" : {
        "required" : [ "note_text", "post_id" ],
        "type" : "object",
        "properties" : {
          "post_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "postId"
          },
          "note_text" : {
            "type" : "string",
            "description" : "Text for the community note",
            "x-ballerina-name" : "noteText"
          }
        },
        "additionalProperties" : false
      },
      "Aggregate" : {
        "type" : "integer",
        "description" : "The sum of results returned in this response",
        "format" : "int32"
      },
      "ComplianceJobName" : {
        "maxLength" : 64,
        "type" : "string",
        "description" : "User-provided name for a compliance job",
        "example" : "my-job"
      },
      "Get2DmConversationsWithParticipantIdDmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersIdFollowedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "private" : {
            "type" : "boolean"
          },
          "name" : {
            "maxLength" : 25,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "Place" : {
        "required" : [ "full_name", "id" ],
        "type" : "object",
        "properties" : {
          "geo" : {
            "$ref" : "#/components/schemas/Geo"
          },
          "contained_within" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaceId"
            },
            "x-ballerina-name" : "containedWithin"
          },
          "country" : {
            "type" : "string",
            "description" : "The full name of the county in which this place exists",
            "example" : "United States"
          },
          "country_code" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CountryCode"
            } ],
            "x-ballerina-name" : "countryCode"
          },
          "full_name" : {
            "type" : "string",
            "description" : "The full name of this place",
            "example" : "Lakewood, CO",
            "x-ballerina-name" : "fullName"
          },
          "place_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PlaceType"
            } ],
            "x-ballerina-name" : "placeType"
          },
          "name" : {
            "type" : "string",
            "description" : "The human readable name of this place",
            "example" : "Lakewood"
          },
          "id" : {
            "$ref" : "#/components/schemas/PlaceId"
          }
        }
      },
      "AnimatedGif" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Media"
        }, {
          "$ref" : "#/components/schemas/AnimatedGifAllOf2"
        } ]
      },
      "Get2LikesSample10StreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeWithTweetAuthor"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserComplianceStreamResponse" : {
        "description" : "User compliance stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserComplianceStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/UserComplianceStreamResponseUserComplianceStreamResponseOneOf12"
        } ]
      },
      "Start" : {
        "type" : "string",
        "description" : "The start time of the bucket",
        "format" : "date-time"
      },
      "RulesRequestSummaryRulesRequestSummaryOneOf12" : {
        "required" : [ "deleted", "not_deleted" ],
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were deleted",
            "format" : "int32"
          },
          "not_deleted" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were not deleted",
            "format" : "int32",
            "x-ballerina-name" : "notDeleted"
          }
        }
      },
      "ComplianceJobType" : {
        "type" : "string",
        "description" : "Type of compliance job to list",
        "enum" : [ "tweets", "users" ]
      },
      "RulesCapProblem" : {
        "description" : "You have exceeded the maximum number of rules",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "GenericProblem" : {
        "description" : "A generic problem with no additional information beyond that provided by the HTTP status code",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "PlaidAccount" : {
        "required" : [ "accountCategory", "accountId", "accountNumberDisplay", "accountType", "currency", "productName", "status" ],
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "The Plaid account ID"
          },
          "accountCategory" : {
            "type" : "string",
            "description" : "The category of the account (e.g., personal, business)"
          },
          "accountType" : {
            "type" : "string",
            "description" : "The type of the account (e.g., checking, savings)"
          },
          "currentBalance" : {
            "type" : "number",
            "description" : "The current balance of the account"
          },
          "nickname" : {
            "type" : "string",
            "description" : "The nickname of the account"
          },
          "accountNumberDisplay" : {
            "type" : "string",
            "description" : "The last 2-4 digits of the account number"
          },
          "currency" : {
            "$ref" : "#/components/schemas/PlaidCurrency"
          },
          "productName" : {
            "type" : "string",
            "description" : "The name of the product associated with the account"
          },
          "availableBalance" : {
            "type" : "number",
            "description" : "The available balance of the account"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the account"
          }
        },
        "description" : "Descriptor for a Plaid account"
      },
      "Metrics" : {
        "type" : "object",
        "properties" : {
          "follows" : {
            "title" : "Follows",
            "type" : "integer",
            "description" : "Tracks number of Follows"
          },
          "media_views" : {
            "title" : "Media Views",
            "type" : "integer",
            "description" : "Tracks number of Media views",
            "x-ballerina-name" : "mediaViews"
          },
          "impressions" : {
            "title" : "Impressions",
            "type" : "integer",
            "description" : "Tracks number of Impressions"
          },
          "email_tweet" : {
            "title" : "Email Tweet",
            "type" : "integer",
            "description" : "Tracks number of Email Tweet actions",
            "x-ballerina-name" : "emailTweet"
          },
          "detail_expands" : {
            "title" : "Detail Expands",
            "type" : "integer",
            "description" : "Tracks number of Detail expands",
            "x-ballerina-name" : "detailExpands"
          },
          "url_clicks" : {
            "title" : "URL Clicks",
            "type" : "integer",
            "description" : "Tracks number of URL clicks",
            "x-ballerina-name" : "urlClicks"
          },
          "app_install_attempts" : {
            "title" : "App Install Attempts",
            "type" : "integer",
            "description" : "Tracks number of App Install Attempts",
            "x-ballerina-name" : "appInstallAttempts"
          },
          "app_opens" : {
            "title" : "App Opens",
            "type" : "integer",
            "description" : "Tracks number of App opens",
            "x-ballerina-name" : "appOpens"
          },
          "link_clicks" : {
            "title" : "Link Clicks",
            "type" : "integer",
            "description" : "Tracks number of Link clicks",
            "x-ballerina-name" : "linkClicks"
          },
          "media_engagements" : {
            "title" : "Media Engagements",
            "type" : "integer",
            "description" : "Tracks number of Media engagements",
            "x-ballerina-name" : "mediaEngagements"
          },
          "replies" : {
            "title" : "Replies",
            "type" : "integer",
            "description" : "Tracks number of Replies"
          },
          "hashtag_clicks" : {
            "title" : "Hashtag Clicks",
            "type" : "integer",
            "description" : "Tracks number of Hashtag clicks",
            "x-ballerina-name" : "hashtagClicks"
          },
          "engagements" : {
            "title" : "Engagements",
            "type" : "integer",
            "description" : "Tracks total Engagements"
          },
          "quote_tweets" : {
            "title" : "Quote Tweets",
            "type" : "integer",
            "description" : "Tracks number of Quote Tweets",
            "x-ballerina-name" : "quoteTweets"
          },
          "profile_visits" : {
            "title" : "Profile Visits",
            "type" : "integer",
            "description" : "Tracks number of Profile visits",
            "x-ballerina-name" : "profileVisits"
          },
          "retweets" : {
            "title" : "Retweets",
            "type" : "integer",
            "description" : "Tracks number of Retweets"
          },
          "permalink_clicks" : {
            "title" : "Permalink Clicks",
            "type" : "integer",
            "description" : "Tracks number of Permalink clicks",
            "x-ballerina-name" : "permalinkClicks"
          },
          "user_profile_clicks" : {
            "title" : "User Profile Clicks",
            "type" : "integer",
            "description" : "Tracks number of User Profile clicks",
            "x-ballerina-name" : "userProfileClicks"
          },
          "likes" : {
            "title" : "Likes",
            "type" : "integer",
            "description" : "Tracks number of Likes"
          }
        }
      },
      "PaginationToken32" : {
        "minLength" : 16,
        "type" : "string",
        "description" : "A base32 pagination token"
      },
      "DeleteDmResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteDmResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "LikeId" : {
        "pattern" : "^[A-Za-z0-9_]{1,40}$",
        "type" : "string",
        "description" : "The unique identifier of this Like",
        "example" : "8ba4f34e6235d905a46bac021d98e923"
      },
      "HashtagFields" : {
        "required" : [ "tag" ],
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string",
            "description" : "The text of the Hashtag",
            "example" : "MondayMotivation"
          }
        },
        "description" : "Represent the portion of text recognized as a Hashtag, and its start and end position within the text"
      },
      "List" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "private" : {
            "type" : "boolean"
          },
          "owner_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "ownerId"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this List"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/ListId"
          },
          "member_count" : {
            "type" : "integer",
            "x-ballerina-name" : "memberCount"
          },
          "follower_count" : {
            "type" : "integer",
            "x-ballerina-name" : "followerCount"
          }
        },
        "description" : "A X List is a curated group of accounts"
      },
      "TweetWithheldComplianceSchema" : {
        "required" : [ "withheld" ],
        "type" : "object",
        "properties" : {
          "withheld" : {
            "$ref" : "#/components/schemas/TweetTakedownComplianceSchema"
          }
        }
      },
      "PlaidAddress" : {
        "required" : [ "city", "country", "line1" ],
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "The country of the address (ISO 3166-1 alpha-2 code)"
          },
          "city" : {
            "type" : "string",
            "description" : "The city of the address"
          },
          "postalCode" : {
            "type" : "string",
            "description" : "The postal code of the address"
          },
          "region" : {
            "type" : "string",
            "description" : "The region or state of the address"
          },
          "line2" : {
            "type" : "string",
            "description" : "The second line of the address"
          },
          "line1" : {
            "type" : "string",
            "description" : "The first line of the address"
          }
        },
        "description" : "Address information for the account holder"
      },
      "DownloadUrl" : {
        "type" : "string",
        "description" : "URL from which the user will retrieve their compliance results",
        "format" : "uri"
      },
      "EngagementMeasurementValueTimestamp" : {
        "type" : "object",
        "properties" : {
          "iso8601_time" : {
            "type" : "string",
            "x-ballerina-name" : "iso8601Time"
          }
        }
      },
      "Get2TweetsSampleStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListFollowedResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListFollowedResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "OperationalDisconnectProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "disconnect_type" : {
            "type" : "string",
            "enum" : [ "OperationalDisconnect", "UpstreamOperationalDisconnect", "ForceDisconnect", "UpstreamUncleanDisconnect", "SlowReader", "InternalError", "ClientApplicationStateDegraded", "InvalidRules" ],
            "x-ballerina-name" : "disconnectType"
          }
        }
      },
      "Get2TweetsCountsRecentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchCount"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsCountsAllResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this Media",
        "example" : "1146654567674912769"
      },
      "Video" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Media"
        }, {
          "$ref" : "#/components/schemas/VideoAllOf2"
        } ]
      },
      "TweetPromotedMetrics" : {
        "type" : "object",
        "properties" : {
          "like_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been liked",
            "format" : "int32",
            "x-ballerina-name" : "likeCount"
          },
          "reply_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been replied to",
            "format" : "int32",
            "x-ballerina-name" : "replyCount"
          },
          "retweet_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been Retweeted",
            "format" : "int32",
            "x-ballerina-name" : "retweetCount"
          },
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Promoted nonpublic engagement metrics for the Tweet at the time of the request"
      },
      "End" : {
        "type" : "string",
        "description" : "The end time of the bucket",
        "format" : "date-time"
      },
      "Get2TweetsIdRetweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersSearchResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          }
        }
      },
      "MuteUserRequest" : {
        "required" : [ "target_user_id" ],
        "type" : "object",
        "properties" : {
          "target_user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "targetUserId"
          }
        }
      },
      "RulesResponseMetadata" : {
        "required" : [ "sent" ],
        "type" : "object",
        "properties" : {
          "summary" : {
            "$ref" : "#/components/schemas/RulesRequestSummary"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "type" : "integer",
            "description" : "Number of Rules in result set",
            "format" : "int32",
            "x-ballerina-name" : "resultCount"
          },
          "sent" : {
            "type" : "string"
          }
        }
      },
      "ListAddUserRequest" : {
        "required" : [ "user_id" ],
        "type" : "object",
        "properties" : {
          "user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "userId"
          }
        }
      },
      "AddOrDeleteRulesRequest" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AddRulesRequest"
        }, {
          "$ref" : "#/components/schemas/DeleteRulesRequest"
        } ]
      },
      "PollOptionLabel" : {
        "maxLength" : 25,
        "minLength" : 1,
        "type" : "string",
        "description" : "The text of a poll choice"
      },
      "BookmarkFolderPostsResponseData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "RulesLookupResponse" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Rule"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/RulesResponseMetadata"
          }
        }
      },
      "BookmarkMutationResponseData" : {
        "type" : "object",
        "properties" : {
          "bookmarked" : {
            "type" : "boolean"
          }
        }
      },
      "ListUnpinResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListPinnedResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DuplicateRuleProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "UsersLikesCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersLikesCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "FullTextEntities" : {
        "type" : "object",
        "properties" : {
          "cashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            }
          },
          "hashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "mentions" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          },
          "annotations" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FullTextEntitiesAnnotations"
            }
          }
        }
      },
      "EntityIndicesInclusiveExclusive" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity starts.  The index is inclusive",
            "example" : 50
          },
          "end" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity ends.  The index is exclusive",
            "example" : 61
          }
        },
        "description" : "Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is exclusive"
      },
      "PollOption" : {
        "required" : [ "label", "position", "votes" ],
        "type" : "object",
        "properties" : {
          "votes" : {
            "type" : "integer",
            "description" : "Number of users who voted for this choice"
          },
          "label" : {
            "$ref" : "#/components/schemas/PollOptionLabel"
          },
          "position" : {
            "type" : "integer",
            "description" : "Position of this choice in the poll"
          }
        },
        "description" : "Describes a choice in a Poll object"
      },
      "UsersFollowingDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListFollowedResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetComplianceStreamResponseTweetComplianceStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ClientAppUsage" : {
        "type" : "object",
        "properties" : {
          "usage_result_count" : {
            "type" : "integer",
            "description" : "The number of results returned",
            "format" : "int32",
            "x-ballerina-name" : "usageResultCount"
          },
          "client_app_id" : {
            "type" : "string",
            "description" : "The unique identifier for this project",
            "format" : "^[0-9]{1,19}$",
            "x-ballerina-name" : "clientAppId"
          },
          "usage" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "The usage value",
            "items" : {
              "$ref" : "#/components/schemas/UsageFields"
            }
          }
        },
        "description" : "Usage per client app"
      },
      "UsersFollowingCreateRequest" : {
        "required" : [ "target_user_id" ],
        "type" : "object",
        "properties" : {
          "target_user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "targetUserId"
          }
        }
      },
      "UsageDailyProjectUsage" : {
        "type" : "object",
        "properties" : {
          "project_id" : {
            "type" : "integer",
            "description" : "The unique identifier for this project",
            "format" : "int32",
            "x-ballerina-name" : "projectId"
          },
          "usage" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "The usage value",
            "items" : {
              "$ref" : "#/components/schemas/UsageFields"
            }
          }
        },
        "description" : "The daily usage breakdown for a project"
      },
      "CreateAttachmentsMessageRequest" : {
        "required" : [ "attachments" ],
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmAttachments"
          },
          "text" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Text of the message"
          }
        }
      },
      "Get2UsersRepostsOfMeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DeleteDmResponseData" : {
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "Community" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of this Community"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "id" : {
            "$ref" : "#/components/schemas/CommunityId"
          }
        },
        "description" : "A X Community is a curated group of Posts"
      },
      "Get2SpacesIdBuyersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "EvaluateNoteResponseData" : {
        "type" : "object",
        "properties" : {
          "claim_opinion_score" : {
            "type" : "number",
            "description" : "Claim opinion model score for the note",
            "format" : "double",
            "x-ballerina-name" : "claimOpinionScore"
          }
        }
      },
      "SubscriptionsListGetResponseData" : {
        "required" : [ "application_id", "subscriptions", "webhook_id", "webhook_url" ],
        "type" : "object",
        "properties" : {
          "subscriptions" : {
            "type" : "array",
            "description" : "List of active subscriptions for the webhook",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionsListGetResponseDataSubscriptions"
            }
          },
          "webhook_url" : {
            "type" : "string",
            "description" : "The url for the associated webhook",
            "x-ballerina-name" : "webhookUrl"
          },
          "webhook_id" : {
            "type" : "string",
            "description" : "The associated webhook ID",
            "x-ballerina-name" : "webhookId"
          },
          "application_id" : {
            "type" : "string",
            "description" : "The application ID",
            "x-ballerina-name" : "applicationId"
          }
        },
        "description" : "The list of active subscriptions for a specified webhook"
      },
      "Get2UsersIdFollowersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaPayloadBinary" : {
        "type" : "string",
        "description" : "The file to upload",
        "format" : "binary"
      },
      "CashtagEntity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/CashtagFields"
        } ]
      },
      "Oauth1PermissionsProblem" : {
        "description" : "A problem that indicates your client application does not have the required OAuth1 permissions for the requested endpoint",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "ConnectionExceptionProblem" : {
        "description" : "A problem that indicates something is wrong with the connection",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ConnectionExceptionProblemAllOf2"
        } ]
      },
      "SubscriptionsListGetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionsListGetResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "HashtagEntity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/HashtagFields"
        } ]
      },
      "DownloadExpiration" : {
        "type" : "string",
        "description" : "Expiration time of the download URL",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40Z"
      },
      "UserAffiliation" : {
        "type" : "object",
        "properties" : {
          "badge_url" : {
            "type" : "string",
            "description" : "The badge URL corresponding to the affiliation",
            "format" : "uri",
            "x-ballerina-name" : "badgeUrl"
          },
          "user_id" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "userId"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the affiliation"
          },
          "url" : {
            "type" : "string",
            "description" : "The URL, if available, to details about an affiliation",
            "format" : "uri"
          }
        },
        "description" : "Metadata about a user's affiliation"
      },
      "UserEntitiesUrl" : {
        "type" : "object",
        "properties" : {
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            }
          }
        },
        "description" : "Expanded details for the URL specified in the User's profile, with start and end indices"
      },
      "ComplianceJob" : {
        "required" : [ "created_at", "download_expires_at", "download_url", "id", "status", "type", "upload_expires_at", "upload_url" ],
        "type" : "object",
        "properties" : {
          "download_expires_at" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DownloadExpiration"
            } ],
            "x-ballerina-name" : "downloadExpiresAt"
          },
          "download_url" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DownloadUrl"
            } ],
            "x-ballerina-name" : "downloadUrl"
          },
          "name" : {
            "$ref" : "#/components/schemas/ComplianceJobName"
          },
          "upload_expires_at" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UploadExpiration"
            } ],
            "x-ballerina-name" : "uploadExpiresAt"
          },
          "created_at" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedAt"
            } ],
            "x-ballerina-name" : "createdAt"
          },
          "upload_url" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UploadUrl"
            } ],
            "x-ballerina-name" : "uploadUrl"
          },
          "id" : {
            "$ref" : "#/components/schemas/JobId"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComplianceJobType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ComplianceJobStatus"
          }
        }
      },
      "Position" : {
        "maxItems" : 2,
        "minItems" : 2,
        "type" : "array",
        "description" : "A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`",
        "example" : [ -105.18816086351444, 40.247749999999996 ],
        "items" : {
          "type" : "number"
        }
      },
      "MediaSegments" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/MediaSegmentsOneOf1"
        }, {
          "$ref" : "#/components/schemas/MediaSegmentsMediaSegmentsOneOf12"
        } ]
      },
      "BookmarkMutationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BookmarkMutationResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersRetweetsCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "retweeted" : {
            "type" : "boolean"
          }
        }
      },
      "UsageFields" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "The time period for the usage",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z"
          },
          "usage" : {
            "type" : "integer",
            "description" : "The usage value",
            "format" : "int32"
          }
        },
        "description" : "Represents the data for Usage"
      },
      "CreateNoteResponseData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/NoteId"
          }
        }
      },
      "UsersDMBlockCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersDMBlockCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Variant" : {
        "type" : "object",
        "properties" : {
          "bit_rate" : {
            "type" : "integer",
            "description" : "The bit rate of the media",
            "x-ballerina-name" : "bitRate"
          },
          "content_type" : {
            "type" : "string",
            "description" : "The content type of the media",
            "x-ballerina-name" : "contentType"
          },
          "url" : {
            "type" : "string",
            "description" : "The url to the media",
            "format" : "uri"
          }
        }
      },
      "UsersRetweetsDeleteResponseData" : {
        "type" : "object",
        "properties" : {
          "retweeted" : {
            "type" : "boolean"
          }
        }
      },
      "TweetEditComplianceObjectSchema" : {
        "required" : [ "edit_tweet_ids", "event_at", "initial_tweet_id", "tweet" ],
        "type" : "object",
        "properties" : {
          "initial_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "initialTweetId"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/DmEventReferencedTweets"
          },
          "edit_tweet_ids" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "x-ballerina-name" : "editTweetIds"
          }
        }
      },
      "TweetCreateRequestGeo" : {
        "type" : "object",
        "properties" : {
          "place_id" : {
            "type" : "string",
            "x-ballerina-name" : "placeId"
          }
        },
        "additionalProperties" : false,
        "description" : "Place ID being attached to the Tweet for geo location"
      },
      "AllowDownloadStatus" : {
        "type" : "object",
        "properties" : {
          "allow_download" : {
            "type" : "boolean",
            "example" : true,
            "x-ballerina-name" : "allowDownload"
          }
        }
      },
      "TweetNoteTweetEntities" : {
        "type" : "object",
        "properties" : {
          "cashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            }
          },
          "hashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "mentions" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          }
        }
      },
      "UserComplianceData" : {
        "description" : "User compliance data",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserProtectComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserUnprotectComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserDeleteComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserUndeleteComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserSuspendComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserUnsuspendComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserWithheldComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserScrubGeoSchema"
        }, {
          "$ref" : "#/components/schemas/UserProfileModificationComplianceSchema"
        } ]
      },
      "ListPinnedResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListPinnedResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Url" : {
        "type" : "string",
        "description" : "A validly formatted URL",
        "format" : "uri",
        "example" : "https://developer.twitter.com/en/docs/twitter-api"
      },
      "CreateTextMessageRequest" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmAttachments"
          },
          "text" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Text of the message"
          }
        }
      },
      "TweetCount" : {
        "type" : "integer",
        "description" : "The count for the bucket"
      },
      "RuleTag" : {
        "type" : "string",
        "description" : "A tag meant for the labeling of user provided rules",
        "example" : "Non-retweeted coffee Posts"
      },
      "WebhookLinksGetResponseDataLinks" : {
        "type" : "object",
        "properties" : {
          "business_user_id" : {
            "type" : "string",
            "description" : "The user ID",
            "x-ballerina-name" : "businessUserId"
          },
          "instance_id" : {
            "type" : "string",
            "description" : "The stream ID associated with the FilteredStream instance",
            "x-ballerina-name" : "instanceId"
          },
          "webhook_id" : {
            "type" : "string",
            "description" : "The unique identifier for the webhook",
            "x-ballerina-name" : "webhookId"
          },
          "created_at" : {
            "type" : "string",
            "description" : "The datetime the webhook was linked to the stream",
            "format" : "data-time",
            "x-ballerina-name" : "createdAt"
          },
          "fields" : {
            "type" : "array",
            "description" : "Requested fields to be rendered",
            "items" : {
              "type" : "string",
              "description" : "A query-parameter formatted field or expansion, e.g., 'expansions=author_id' or 'user.fields=name,username'"
            }
          },
          "application_id" : {
            "type" : "string",
            "description" : "The application ID",
            "x-ballerina-name" : "applicationId"
          }
        }
      },
      "StreamingLikeResponseV2" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeWithTweetAuthor"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "BookmarkFolderPostsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          }
        }
      },
      "Usage" : {
        "type" : "object",
        "properties" : {
          "cap_reset_day" : {
            "type" : "integer",
            "description" : "Number of days left for the Tweet cap to reset",
            "format" : "int32",
            "x-ballerina-name" : "capResetDay"
          },
          "project_usage" : {
            "type" : "integer",
            "description" : "The number of Posts read in this project",
            "format" : "int32",
            "x-ballerina-name" : "projectUsage"
          },
          "project_cap" : {
            "type" : "integer",
            "description" : "Total number of Posts that can be read in this project per month",
            "format" : "int32",
            "x-ballerina-name" : "projectCap"
          },
          "project_id" : {
            "type" : "string",
            "description" : "The unique identifier for this project",
            "format" : "^[0-9]{1,19}$",
            "x-ballerina-name" : "projectId"
          },
          "daily_client_app_usage" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "The daily usage breakdown for each Client Application a project",
            "items" : {
              "$ref" : "#/components/schemas/ClientAppUsage"
            },
            "x-ballerina-name" : "dailyClientAppUsage"
          },
          "daily_project_usage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UsageDailyProjectUsage"
            } ],
            "x-ballerina-name" : "dailyProjectUsage"
          }
        },
        "description" : "Usage per client app"
      },
      "WebhookLinksDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteDmResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UnsupportedAuthenticationProblem" : {
        "description" : "A problem that indicates that the authentication used is not supported",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "ListFollowedResponseData" : {
        "type" : "object",
        "properties" : {
          "following" : {
            "type" : "boolean"
          }
        }
      },
      "ReplySettingsWithVerifiedUsers" : {
        "pattern" : "^[A-Za-z]{1,12}$",
        "type" : "string",
        "description" : "Shows who can reply a Tweet. Fields returned are everyone, mentioned_users, subscribers, verified and following",
        "enum" : [ "everyone", "mentionedUsers", "following", "other", "subscribers", "verified" ]
      },
      "PhotoAllOf2" : {
        "type" : "object",
        "properties" : {
          "alt_text" : {
            "type" : "string",
            "x-ballerina-name" : "altText"
          },
          "url" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "SubscriptionsCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "subscribed" : {
            "type" : "boolean"
          }
        }
      },
      "SpaceTopics" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the given topic"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the given topic"
          },
          "id" : {
            "type" : "string",
            "description" : "An ID suitable for use in the REST API"
          }
        },
        "description" : "The X Topic object",
        "example" : "{\"description\":\"All about technology\",\"id\":\"848920371311001600\",\"name\":\"Technology\"}"
      },
      "PaginationToken36" : {
        "minLength" : 1,
        "type" : "string",
        "description" : "A base36 pagination token"
      },
      "MetadataCreateRequestMetadata" : {
        "type" : "object",
        "properties" : {
          "found_media_origin" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/FoundMediaOrigin"
            } ],
            "x-ballerina-name" : "foundMediaOrigin"
          },
          "domain_restrictions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DomainRestrictions"
            } ],
            "x-ballerina-name" : "domainRestrictions"
          },
          "preview_image" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviewImage"
            } ],
            "x-ballerina-name" : "previewImage"
          },
          "shared_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SharedInfo"
            } ],
            "x-ballerina-name" : "sharedInfo"
          },
          "upload_source" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UploadSource"
            } ],
            "x-ballerina-name" : "uploadSource"
          },
          "sensitive_media_warning" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SensitiveMediaWarning"
            } ],
            "x-ballerina-name" : "sensitiveMediaWarning"
          },
          "geo_restrictions" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/GeoRestrictions"
            } ],
            "x-ballerina-name" : "geoRestrictions"
          },
          "audience_policy" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AudiencePolicy"
            } ],
            "x-ballerina-name" : "audiencePolicy"
          },
          "allow_download_status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AllowDownloadStatus"
            } ],
            "x-ballerina-name" : "allowDownloadStatus"
          },
          "alt_text" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AltText"
            } ],
            "x-ballerina-name" : "altText"
          },
          "sticker_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/StickerInfo"
            } ],
            "x-ballerina-name" : "stickerInfo"
          },
          "content_expiration" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ContentExpiration"
            } ],
            "x-ballerina-name" : "contentExpiration"
          },
          "management_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ManagementInfo"
            } ],
            "x-ballerina-name" : "managementInfo"
          }
        }
      },
      "ProcessingInfo" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "progress_percent" : {
            "type" : "integer",
            "description" : "Percent of upload progress",
            "format" : "int32",
            "x-ballerina-name" : "progressPercent"
          },
          "check_after_secs" : {
            "type" : "integer",
            "description" : "Number of seconds to check again for status",
            "format" : "int32",
            "x-ballerina-name" : "checkAfterSecs"
          },
          "state" : {
            "type" : "string",
            "description" : "State of upload",
            "enum" : [ "succeeded", "in_progress", "pending", "failed" ]
          }
        }
      },
      "ClientDisconnectedProblem" : {
        "description" : "Your client has gone away",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "UploadSource" : {
        "required" : [ "upload_source" ],
        "type" : "object",
        "properties" : {
          "upload_source" : {
            "type" : "string",
            "description" : "Records the source (e.g., app, device) from which the media was uploaded",
            "example" : "gallery",
            "x-ballerina-name" : "uploadSource"
          }
        }
      },
      "BookmarkAddRequest" : {
        "required" : [ "tweet_id" ],
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          }
        }
      },
      "ResourceUnauthorizedProblemAllOf2" : {
        "required" : [ "parameter", "resource_id", "resource_type", "section", "value" ],
        "type" : "object",
        "properties" : {
          "parameter" : {
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          },
          "section" : {
            "type" : "string",
            "enum" : [ "data", "includes" ]
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "TweetTakedownComplianceSchema" : {
        "required" : [ "event_at", "tweet", "withheld_in_countries" ],
        "type" : "object",
        "properties" : {
          "quote_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "quoteTweetId"
          },
          "withheld_in_countries" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "withheldInCountries"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetComplianceSchemaTweet"
          }
        }
      },
      "Get2TweetsSample10StreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "LikesComplianceStreamResponse" : {
        "description" : "Likes compliance stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LikesComplianceStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/LikesComplianceStreamResponseLikesComplianceStreamResponseOneOf12"
        } ]
      },
      "UrlImage" : {
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/MediaWidth"
          },
          "url" : {
            "$ref" : "#/components/schemas/Url"
          },
          "height" : {
            "$ref" : "#/components/schemas/MediaHeight"
          }
        },
        "description" : "Represent the information for the URL image"
      },
      "UsageCapExceededProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "period" : {
            "type" : "string",
            "enum" : [ "Daily", "Monthly" ]
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "Account", "Product" ]
          }
        }
      },
      "WebhookLinksGetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WebhookLinksGetResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "NewestId" : {
        "type" : "string",
        "description" : "The newest id in this response"
      },
      "Get2UsersIdLikedTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "PlaidAccountPaymentNetwork" : {
        "required" : [ "bankId", "identifier", "transferIn", "transferOut", "type" ],
        "type" : "object",
        "properties" : {
          "transferOut" : {
            "type" : "boolean",
            "description" : "Indicates if transfers out of the account are supported"
          },
          "identifier" : {
            "type" : "string",
            "description" : "The payment network identifier"
          },
          "bankId" : {
            "type" : "string",
            "description" : "The bank ID associated with the account"
          },
          "transferIn" : {
            "type" : "boolean",
            "description" : "Indicates if transfers into the account are supported"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of payment network (e.g., ACH, SEPA)"
          }
        },
        "description" : "Payment network details associated with the account"
      },
      "RuleValue" : {
        "type" : "string",
        "description" : "The filterlang value of the rule",
        "example" : "coffee -is:retweet"
      },
      "CashtagFields" : {
        "required" : [ "tag" ],
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string",
            "example" : "TWTR"
          }
        },
        "description" : "Represent the portion of text recognized as a Cashtag, and its start and end position within the text"
      },
      "LikesComplianceStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeComplianceSchema"
          }
        },
        "description" : "Compliance event"
      },
      "TweetOrganicMetrics" : {
        "required" : [ "impression_count", "like_count", "reply_count", "retweet_count" ],
        "type" : "object",
        "properties" : {
          "like_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been liked",
            "x-ballerina-name" : "likeCount"
          },
          "reply_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been replied to",
            "x-ballerina-name" : "replyCount"
          },
          "retweet_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been Retweeted",
            "x-ballerina-name" : "retweetCount"
          },
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Organic nonpublic engagement metrics for the Tweet at the time of the request"
      },
      "UserScrubGeoSchema" : {
        "required" : [ "scrub_geo" ],
        "type" : "object",
        "properties" : {
          "scrub_geo" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserScrubGeoObjectSchema"
            } ],
            "x-ballerina-name" : "scrubGeo"
          }
        }
      },
      "UsersLikesCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "liked" : {
            "type" : "boolean"
          }
        }
      },
      "NonCompliantRulesProblem" : {
        "description" : "A problem that indicates the user's rule set is not compliant",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "TweetHideResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetHideResponseData"
          }
        }
      },
      "Get2UsageTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Usage"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaWidth" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "The width of the media in pixels"
      },
      "ListMutateResponseData" : {
        "type" : "object",
        "properties" : {
          "is_member" : {
            "type" : "boolean",
            "x-ballerina-name" : "isMember"
          }
        }
      },
      "Get2UsersIdOwnedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ReplayJobCreateResponse" : {
        "required" : [ "created_at", "job_id" ],
        "type" : "object",
        "properties" : {
          "job_id" : {
            "type" : "string",
            "description" : "The unique identifier for the initiated replay job",
            "example" : "1915510368169844736",
            "x-ballerina-name" : "jobId"
          },
          "created_at" : {
            "type" : "string",
            "description" : "The UTC timestamp indicating when the replay job was created",
            "format" : "date-time",
            "example" : "2025-04-24T20:57:15.242Z",
            "x-ballerina-name" : "createdAt"
          }
        },
        "description" : "Confirmation that the replay job request was accepted"
      },
      "SearchCount" : {
        "required" : [ "end", "start", "tweet_count" ],
        "type" : "object",
        "properties" : {
          "tweet_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetCount"
            } ],
            "x-ballerina-name" : "tweetCount"
          },
          "start" : {
            "$ref" : "#/components/schemas/Start"
          },
          "end" : {
            "$ref" : "#/components/schemas/End"
          }
        },
        "description" : "Represent a Search Count Result"
      },
      "ContextAnnotationDomainFields" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the context annotation domain"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the context annotation domain"
          },
          "id" : {
            "pattern" : "^[0-9]{1,19}$",
            "type" : "string",
            "description" : "The unique id for a context annotation domain"
          }
        },
        "description" : "Represents the data for the context annotation domain"
      },
      "PlaceId" : {
        "type" : "string",
        "description" : "The identifier for this place",
        "example" : "f7eb2fa2fea288b1"
      },
      "Get2UsersIdTimelinesReverseChronologicalResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdMentionsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MetadataCreateRequest" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/MetadataCreateRequestMetadata"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        }
      },
      "PreviewImageMediaKey" : {
        "type" : "object",
        "properties" : {
          "media_category" : {
            "type" : "string",
            "description" : "The media category of media",
            "example" : "TweetImage",
            "default" : "TweetImage",
            "enum" : [ "TweetImage" ],
            "x-ballerina-name" : "mediaCategory"
          },
          "media" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        }
      },
      "PaginationTokenLong" : {
        "maxLength" : 19,
        "minLength" : 1,
        "type" : "string",
        "description" : "A 'long' pagination token"
      },
      "Trend" : {
        "type" : "object",
        "properties" : {
          "tweet_count" : {
            "type" : "integer",
            "description" : "Number of Posts in this trend",
            "format" : "int32",
            "x-ballerina-name" : "tweetCount"
          },
          "trend_name" : {
            "type" : "string",
            "description" : "Name of the trend",
            "x-ballerina-name" : "trendName"
          }
        },
        "description" : "A trend"
      },
      "SubtitlesCreateResponseData" : {
        "required" : [ "associated_subtitles", "id", "media_category" ],
        "type" : "object",
        "properties" : {
          "associated_subtitles" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Subtitles"
            },
            "x-ballerina-name" : "associatedSubtitles"
          },
          "media_category" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCategorySubtitles"
            } ],
            "x-ballerina-name" : "mediaCategory"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        }
      },
      "SubtitlesCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubtitlesCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AddOrDeleteRulesResponse" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "All user-specified stream filtering rules that were created",
            "items" : {
              "$ref" : "#/components/schemas/Rule"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/RulesResponseMetadata"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "A response from modifying user-specified stream filtering rules"
      },
      "SubtitlesCreateRequest" : {
        "type" : "object",
        "properties" : {
          "subtitles" : {
            "$ref" : "#/components/schemas/Subtitles"
          },
          "media_category" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCategorySubtitles"
            } ],
            "x-ballerina-name" : "mediaCategory"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        }
      },
      "Get2TweetsAnalyticsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Analytics"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaAnalyticsData" : {
        "type" : "object",
        "properties" : {
          "timestamped_metrics" : {
            "title" : "Timestamped Metrics",
            "type" : "array",
            "description" : "Array containing metrics data along with the timestamps of their recording",
            "items" : {
              "$ref" : "#/components/schemas/MediaTimestampedMetrics"
            },
            "x-ballerina-name" : "timestampedMetrics"
          },
          "media_key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaKey"
            } ],
            "x-ballerina-name" : "mediaKey"
          }
        }
      },
      "UsersDMUnBlockCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersDMBlockCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2Insights28hrResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Engagement"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ComplianceJobStatus" : {
        "type" : "string",
        "description" : "Status of a compliance job",
        "enum" : [ "created", "in_progress", "failed", "complete", "expired" ]
      },
      "CreateMessageRequest" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/CreateTextMessageRequest"
        }, {
          "$ref" : "#/components/schemas/CreateAttachmentsMessageRequest"
        } ]
      },
      "TweetCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaUploadAppendResponseData" : {
        "type" : "object",
        "properties" : {
          "expires_at" : {
            "type" : "integer",
            "description" : "Unix epoch time in seconds after when the upload session expires",
            "format" : "int64",
            "x-ballerina-name" : "expiresAt"
          }
        }
      },
      "MediaHeight" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "The height of the media in pixels"
      },
      "TweetUndropComplianceSchema" : {
        "required" : [ "undrop" ],
        "type" : "object",
        "properties" : {
          "undrop" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "WebhookLinksGetResponseData" : {
        "required" : [ "links" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "description" : "list of links",
            "items" : {
              "$ref" : "#/components/schemas/WebhookLinksGetResponseDataLinks"
            }
          }
        },
        "description" : "The list of active webhook links for a given stream"
      },
      "NextToken" : {
        "minLength" : 1,
        "type" : "string",
        "description" : "The next token"
      },
      "PlaidTelephone" : {
        "required" : [ "country", "number", "type" ],
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "The country code for the phone number (e.g., '+1')"
          },
          "number" : {
            "type" : "string",
            "description" : "The phone number"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of phone number (e.g., 'mobile')"
          }
        },
        "description" : "Telephone information for the account holder"
      },
      "RulesRequestSummaryOneOf1" : {
        "required" : [ "created", "invalid", "not_created", "valid" ],
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "integer",
            "description" : "Number of valid user-specified stream filtering rules",
            "format" : "int32",
            "example" : 1
          },
          "not_created" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were not created",
            "format" : "int32",
            "example" : 1,
            "x-ballerina-name" : "notCreated"
          },
          "created" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were created",
            "format" : "int32",
            "example" : 1
          },
          "invalid" : {
            "type" : "integer",
            "description" : "Number of invalid user-specified stream filtering rules",
            "format" : "int32",
            "example" : 1
          }
        },
        "description" : "A summary of the results of the addition of user-specified stream filtering rules"
      },
      "DuplicateRuleProblem" : {
        "description" : "The rule you have submitted is a duplicate",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/DuplicateRuleProblemAllOf2"
        } ]
      },
      "PreviewImage" : {
        "required" : [ "media_key" ],
        "type" : "object",
        "properties" : {
          "media_key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviewImageMediaKey"
            } ],
            "x-ballerina-name" : "mediaKey"
          }
        }
      },
      "InvalidRequestProblemErrors" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "UserTakedownComplianceSchema" : {
        "required" : [ "event_at", "user", "withheld_in_countries" ],
        "type" : "object",
        "properties" : {
          "withheld_in_countries" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "withheldInCountries"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserComplianceSchemaUser"
          }
        }
      },
      "TweetCreateResponseData" : {
        "required" : [ "id", "text" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          }
        }
      },
      "Get2LikesFirehoseStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeWithTweetAuthor"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Engagement" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EngagementErrors"
            }
          },
          "measurement" : {
            "$ref" : "#/components/schemas/EngagementMeasurement"
          }
        },
        "description" : "An Engagement Api Response"
      },
      "MediaKey" : {
        "pattern" : "^([0-9]+)_([0-9]+)$",
        "type" : "string",
        "description" : "The Media Key identifier for this attachment"
      },
      "ListId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this List",
        "example" : "1146654567674912769"
      },
      "TopicId" : {
        "type" : "string",
        "description" : "Unique identifier of this Topic"
      },
      "CountryCode" : {
        "pattern" : "^[A-Z]{2}$",
        "type" : "string",
        "description" : "A two-letter ISO 3166-1 alpha-2 country code",
        "example" : "US"
      },
      "Topic" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the given topic",
            "example" : "Technology"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the given topic",
            "example" : "All about technology"
          },
          "id" : {
            "$ref" : "#/components/schemas/TopicId"
          }
        },
        "description" : "The topic of a Space, as selected by its creator"
      },
      "JobId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Compliance Job ID",
        "example" : "1372966999991541762"
      },
      "TweetUnviewable" : {
        "required" : [ "application", "event_at", "tweet" ],
        "type" : "object",
        "properties" : {
          "application" : {
            "type" : "string",
            "description" : "If the label is being applied or removed. Possible values are â€˜applyâ€™ or â€˜removeâ€™",
            "example" : "apply"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetComplianceSchemaTweet"
          }
        }
      },
      "TweetComplianceStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetComplianceData"
          }
        },
        "description" : "Compliance event"
      },
      "Get2MediaMediaKeyResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Media"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserProfileModificationComplianceSchema" : {
        "required" : [ "user_profile_modification" ],
        "type" : "object",
        "properties" : {
          "user_profile_modification" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserProfileModificationObjectSchema"
            } ],
            "x-ballerina-name" : "userProfileModification"
          }
        }
      },
      "Get2UsersIdPinnedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ComplianceJobsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MentionEntity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/MentionFields"
        } ]
      },
      "ListDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteDmResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteNoteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "UploadExpiration" : {
        "type" : "string",
        "description" : "Expiration time of the upload URL",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40Z"
      },
      "Point" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "coordinates" : {
            "$ref" : "#/components/schemas/Position"
          },
          "type" : {
            "type" : "string",
            "example" : "Point",
            "enum" : [ "Point" ]
          }
        },
        "description" : "A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object"
      },
      "Get2UsersIdMentionsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdMentionsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2ListsIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaSegmentsOneOf1" : {
        "maximum" : 999,
        "minimum" : 0,
        "type" : "integer",
        "description" : "An integer value representing the media upload segment",
        "format" : "int32"
      },
      "SubscriptionsListGetResponseDataSubscriptions" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "description" : "The ID of the user the webhook is subscribed to",
            "x-ballerina-name" : "userId"
          }
        }
      },
      "Analytics" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnalyticsData"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Variants" : {
        "type" : "array",
        "description" : "An array of all available variants of the media",
        "items" : {
          "$ref" : "#/components/schemas/Variant"
        }
      },
      "TweetScopes" : {
        "type" : "object",
        "properties" : {
          "followers" : {
            "type" : "boolean",
            "description" : "Indicates if this Tweet is viewable by followers without the Tweet ID",
            "example" : false
          }
        },
        "description" : "The scopes for this tweet"
      },
      "ListCreateRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "private" : {
            "type" : "boolean",
            "default" : false
          },
          "name" : {
            "maxLength" : 25,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "NoteInfo" : {
        "required" : [ "classification", "misleading_tags", "text", "trustworthy_sources" ],
        "type" : "object",
        "properties" : {
          "misleading_tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MisleadingTags"
            },
            "x-ballerina-name" : "misleadingTags"
          },
          "text" : {
            "pattern" : "^(?=[\\s\\S]*https?://\\S+)[\\s\\S]+$",
            "type" : "string",
            "description" : "The text summary in the Community Note"
          },
          "classification" : {
            "$ref" : "#/components/schemas/NoteClassification"
          },
          "trustworthy_sources" : {
            "type" : "boolean",
            "description" : "Whether the note provided trustworthy links",
            "x-ballerina-name" : "trustworthySources"
          }
        },
        "additionalProperties" : false,
        "description" : "A X Community Note is a note on a Post"
      },
      "UserId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers",
        "example" : "2244994945"
      },
      "MediaUploadAppendResponse" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MediaUploadAppendResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "A response from getting a media upload request status"
      },
      "UserWithheld" : {
        "required" : [ "country_codes" ],
        "type" : "object",
        "properties" : {
          "scope" : {
            "type" : "string",
            "description" : "Indicates that the content being withheld is a `user`",
            "enum" : [ "user" ]
          },
          "country_codes" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Provides a list of countries where this content is not available",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "countryCodes"
          }
        },
        "description" : "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country)"
      },
      "StickerInfo" : {
        "required" : [ "stickers" ],
        "type" : "object",
        "properties" : {
          "stickers" : {
            "type" : "array",
            "description" : "Stickers list must not be empty and should not exceed 25",
            "items" : {
              "$ref" : "#/components/schemas/Sticker"
            }
          }
        }
      },
      "Get2DmEventsEventIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DmEvent"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "PreviousToken" : {
        "minLength" : 1,
        "type" : "string",
        "description" : "The previous token"
      },
      "CreatedAt" : {
        "type" : "string",
        "description" : "Creation time of the compliance job",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40Z"
      },
      "UserComplianceSchema" : {
        "required" : [ "event_at", "user" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserComplianceSchemaUser"
          }
        }
      },
      "Get2SpacesIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Space"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MetadataCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "associated_metadata" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MetadataCreateRequestMetadata"
            } ],
            "x-ballerina-name" : "associatedMetadata"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        }
      },
      "TweetUnviewableSchema" : {
        "required" : [ "public_tweet_unviewable" ],
        "type" : "object",
        "properties" : {
          "public_tweet_unviewable" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetUnviewable"
            } ],
            "x-ballerina-name" : "publicTweetUnviewable"
          }
        }
      },
      "WebhookLinksCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WebhookLinksCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetLabelData" : {
        "description" : "Tweet label data",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetNoticeSchema"
        }, {
          "$ref" : "#/components/schemas/TweetUnviewableSchema"
        } ]
      },
      "Get2MediaAnalyticsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MediaAnalytics"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubscriptionsDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionsCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DeleteRulesRequest" : {
        "required" : [ "delete" ],
        "type" : "object",
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/DeleteRulesRequestDelete"
          }
        },
        "description" : "A response from deleting user-specified stream filtering rules"
      },
      "UserComplianceSchemaUser" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "AddRulesRequest" : {
        "required" : [ "add" ],
        "type" : "object",
        "properties" : {
          "add" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleNoId"
            }
          }
        },
        "description" : "A request to add a user-specified stream filtering rule"
      },
      "MisleadingTags" : {
        "type" : "string",
        "description" : "Community Note misleading tags type",
        "enum" : [ "disputed_claim_as_fact", "factual_error", "manipulated_media", "misinterpreted_satire", "missing_important_context", "other", "outdated_information" ]
      },
      "UrlEntityDm" : {
        "description" : "Represent the portion of text recognized as a URL, and its start and end position within the text",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/UrlFields"
        } ]
      },
      "WebhookConfigPutResponseData" : {
        "type" : "object",
        "properties" : {
          "attempted" : {
            "type" : "boolean"
          }
        }
      },
      "UsersFollowingCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersFollowingCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "WebhookConfigId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this webhook config",
        "example" : "1146654567674912769"
      },
      "CreateDmConversationRequest" : {
        "required" : [ "conversation_type", "message", "participant_ids" ],
        "type" : "object",
        "properties" : {
          "conversation_type" : {
            "type" : "string",
            "description" : "The conversation type that is being created",
            "enum" : [ "Group" ],
            "x-ballerina-name" : "conversationType"
          },
          "participant_ids" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmParticipants"
            } ],
            "x-ballerina-name" : "participantIds"
          },
          "message" : {
            "$ref" : "#/components/schemas/CreateMessageRequest"
          }
        },
        "additionalProperties" : false
      },
      "DisallowedResourceProblem" : {
        "description" : "A problem that indicates that the resource requested violates the precepts of this API",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/DisallowedResourceProblemAllOf2"
        } ]
      },
      "ResourceNotFoundProblemAllOf2" : {
        "required" : [ "parameter", "resource_id", "resource_type", "value" ],
        "type" : "object",
        "properties" : {
          "parameter" : {
            "minLength" : 1,
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          },
          "value" : {
            "type" : "string",
            "description" : "Value will match the schema of the field"
          }
        }
      },
      "TweetPublicMetrics" : {
        "required" : [ "bookmark_count", "impression_count", "like_count", "reply_count", "retweet_count" ],
        "type" : "object",
        "properties" : {
          "like_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been liked",
            "x-ballerina-name" : "likeCount"
          },
          "bookmark_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been bookmarked",
            "format" : "int32",
            "x-ballerina-name" : "bookmarkCount"
          },
          "reply_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been replied to",
            "x-ballerina-name" : "replyCount"
          },
          "quote_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been quoted",
            "x-ballerina-name" : "quoteCount"
          },
          "retweet_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been Retweeted",
            "x-ballerina-name" : "retweetCount"
          },
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Engagement metrics for the Tweet at the time of the request"
      },
      "MediaTimestampedMetrics" : {
        "type" : "object",
        "properties" : {
          "metrics" : {
            "$ref" : "#/components/schemas/MediaMetrics"
          },
          "timestamp" : {
            "title" : "Timestamp",
            "type" : "string",
            "description" : "ISO8601 Time",
            "example" : "2025-03-17T06:30:00Z"
          }
        }
      },
      "Get2TweetsSearchStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ContextAnnotationEntityFields" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the context annotation entity"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the context annotation entity"
          },
          "id" : {
            "pattern" : "^[0-9]{1,19}$",
            "type" : "string",
            "description" : "The unique id for a context annotation entity"
          }
        },
        "description" : "Represents the data for the context annotation entity"
      },
      "Get2FdxAccountsAccountidContactResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaidAccountContact"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ResourceUnavailableProblem" : {
        "description" : "A problem that indicates a particular Tweet, User, etc. is not available to you",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ResourceUnavailableProblemAllOf2"
        } ]
      },
      "NoteClassification" : {
        "type" : "string",
        "description" : "Community Note classification type",
        "enum" : [ "misinformed_or_potentially_misleading", "not_misleading" ]
      },
      "ResourceNotFoundProblem" : {
        "description" : "A problem that indicates that a given Tweet, User, etc. does not exist",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ResourceNotFoundProblemAllOf2"
        } ]
      },
      "SubscriptionsCountGetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionsCountGetResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersFollowingCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "following" : {
            "type" : "boolean"
          },
          "pending_follow" : {
            "type" : "boolean",
            "x-ballerina-name" : "pendingFollow"
          }
        }
      },
      "BookmarkFolderPostsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BookmarkFolderPostsResponseData"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/BookmarkFolderPostsResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersByUsernameUsernameResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CreateDmEventResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CreateDmEventResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "WebhookConfig" : {
        "required" : [ "created_at", "id", "url", "valid" ],
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "boolean"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "id" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          },
          "url" : {
            "type" : "string",
            "description" : "The callback URL of the webhook"
          }
        },
        "description" : "A Webhook Configuration"
      },
      "DmEventId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of a DM Event",
        "example" : "1146654567674912769"
      },
      "Get2FdxAccountsAccountidTransactionsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaidAccountTransaction"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AnimatedGifAllOf2" : {
        "type" : "object",
        "properties" : {
          "preview_image_url" : {
            "type" : "string",
            "format" : "uri",
            "x-ballerina-name" : "previewImageUrl"
          },
          "variants" : {
            "$ref" : "#/components/schemas/Variants"
          }
        }
      },
      "Get2NotesSearchPostsEligibleForNotesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2NotesSearchNotesWrittenResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2NotesSearchNotesWrittenResponseMeta" : {
        "type" : "object",
        "properties" : {
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "UsersRetweetsCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersRetweetsCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaCategory" : {
        "type" : "string",
        "description" : "A string enum value which identifies a media use-case. This identifier is used to enforce use-case specific constraints (e.g. file size, video duration) and enable advanced features",
        "example" : "tweet_video",
        "enum" : [ "amplify_video", "tweet_gif", "tweet_image", "tweet_video", "dm_gif", "dm_image", "dm_video", "subtitles" ]
      },
      "Get2TweetsSearchStreamRulesCountsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RulesCount"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersLikesDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersLikesCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2ListsIdFollowersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ResourceUnauthorizedProblem" : {
        "description" : "A problem that indicates you are not allowed to see a particular Tweet, User, etc",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ResourceUnauthorizedProblemAllOf2"
        } ]
      },
      "Get2TweetsFirehoseStreamLangPtResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserEntities" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "$ref" : "#/components/schemas/FullTextEntities"
          },
          "url" : {
            "$ref" : "#/components/schemas/UserEntitiesUrl"
          }
        },
        "description" : "A list of metadata found in the User's profile description"
      },
      "UserIdMatchesAuthenticatedUser" : {
        "type" : "string",
        "description" : "Unique identifier of this User. The value must be the same as the authenticated user",
        "example" : "2244994945"
      },
      "TweetAttachments" : {
        "type" : "object",
        "properties" : {
          "media_source_tweet_id" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Posts the media on this Tweet was originally posted in. For example, if the media on a tweet is re-used in another Tweet, this refers to the original, source Tweet.",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "x-ballerina-name" : "mediaSourceTweetId"
          },
          "media_keys" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Media Keys for each one of the media attachments (if media are attached)",
            "items" : {
              "$ref" : "#/components/schemas/MediaKey"
            },
            "x-ballerina-name" : "mediaKeys"
          },
          "poll_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of poll IDs (if polls are attached)",
            "items" : {
              "$ref" : "#/components/schemas/PollId"
            },
            "x-ballerina-name" : "pollIds"
          }
        },
        "description" : "Specifies the type of attachments (if any) present in this Tweet"
      },
      "UserComplianceStreamResponseUserComplianceStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsCountsAllResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchCount"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsCountsAllResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "VideoPromotedMetrics" : {
        "type" : "object",
        "properties" : {
          "playback_100_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 100% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback100Count"
          },
          "playback_75_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 75% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback75Count"
          },
          "playback_25_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 25% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback25Count"
          },
          "playback_0_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 0% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback0Count"
          },
          "view_count" : {
            "type" : "integer",
            "description" : "Number of times this video has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "viewCount"
          },
          "playback_50_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 50% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback50Count"
          }
        },
        "description" : "Promoted nonpublic engagement metrics for the Media at the time of the request"
      },
      "TweetDropComplianceSchema" : {
        "required" : [ "drop" ],
        "type" : "object",
        "properties" : {
          "drop" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "VideoOrganicMetrics" : {
        "type" : "object",
        "properties" : {
          "playback_100_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 100% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback100Count"
          },
          "playback_75_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 75% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback75Count"
          },
          "playback_25_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 25% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback25Count"
          },
          "playback_0_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 0% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback0Count"
          },
          "view_count" : {
            "type" : "integer",
            "description" : "Number of times this video has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "viewCount"
          },
          "playback_50_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 50% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback50Count"
          }
        },
        "description" : "Organic nonpublic engagement metrics for the Media at the time of the request"
      },
      "VideoAllOf2" : {
        "type" : "object",
        "properties" : {
          "duration_ms" : {
            "type" : "integer",
            "x-ballerina-name" : "durationMs"
          },
          "preview_image_url" : {
            "type" : "string",
            "format" : "uri",
            "x-ballerina-name" : "previewImageUrl"
          },
          "promoted_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoPromotedMetrics"
            } ],
            "x-ballerina-name" : "promotedMetrics"
          },
          "public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoPublicMetrics"
            } ],
            "x-ballerina-name" : "publicMetrics"
          },
          "non_public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoNonPublicMetrics"
            } ],
            "x-ballerina-name" : "nonPublicMetrics"
          },
          "variants" : {
            "$ref" : "#/components/schemas/Variants"
          },
          "organic_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoOrganicMetrics"
            } ],
            "x-ballerina-name" : "organicMetrics"
          }
        }
      },
      "FullTextEntitiesAnnotations" : {
        "description" : "Annotation for entities based on the Tweet text",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveInclusive"
        }, {
          "$ref" : "#/components/schemas/AnnotationsAllOf2"
        } ]
      },
      "Get2UsersPersonalizedTrendsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonalizedTrend"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserUnprotectComplianceSchema" : {
        "required" : [ "user_unprotect" ],
        "type" : "object",
        "properties" : {
          "user_unprotect" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userUnprotect"
          }
        }
      },
      "PlaceType" : {
        "type" : "string",
        "example" : "city",
        "enum" : [ "poi", "neighborhood", "city", "admin", "country", "unknown" ]
      },
      "Tweet" : {
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/TweetAttachments"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Tweet",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z",
            "x-ballerina-name" : "createdAt"
          },
          "source" : {
            "type" : "string",
            "description" : "This is deprecated"
          },
          "withheld" : {
            "$ref" : "#/components/schemas/TweetWithheld"
          },
          "edit_controls" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetEditControls"
            } ],
            "x-ballerina-name" : "editControls"
          },
          "geo" : {
            "$ref" : "#/components/schemas/TweetGeo"
          },
          "community_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommunityId"
            } ],
            "x-ballerina-name" : "communityId"
          },
          "conversation_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "conversationId"
          },
          "edit_history_tweet_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Tweet Ids in this Tweet chain",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "x-ballerina-name" : "editHistoryTweetIds"
          },
          "in_reply_to_user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "inReplyToUserId"
          },
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          },
          "lang" : {
            "type" : "string",
            "description" : "Language of the Tweet, if detected by X. Returned as a BCP47 language tag",
            "example" : "en"
          },
          "reply_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ReplySettingsWithVerifiedUsers"
            } ],
            "x-ballerina-name" : "replySettings"
          },
          "referenced_tweets" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Posts this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent",
            "items" : {
              "$ref" : "#/components/schemas/TweetReferencedTweets"
            },
            "x-ballerina-name" : "referencedTweets"
          },
          "possibly_sensitive" : {
            "type" : "boolean",
            "description" : "Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences",
            "example" : false,
            "x-ballerina-name" : "possiblySensitive"
          },
          "public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetPublicMetrics"
            } ],
            "x-ballerina-name" : "publicMetrics"
          },
          "suggested_source_links" : {
            "minItems" : 0,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            },
            "x-ballerina-name" : "suggestedSourceLinks"
          },
          "non_public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetNonPublicMetrics"
            } ],
            "x-ballerina-name" : "nonPublicMetrics"
          },
          "note_tweet" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetNoteTweet"
            } ],
            "x-ballerina-name" : "noteTweet"
          },
          "context_annotations" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContextAnnotation"
            },
            "x-ballerina-name" : "contextAnnotations"
          },
          "entities" : {
            "$ref" : "#/components/schemas/FullTextEntities"
          },
          "promoted_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetPromotedMetrics"
            } ],
            "x-ballerina-name" : "promotedMetrics"
          },
          "display_text_range" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DisplayTextRange"
            } ],
            "x-ballerina-name" : "displayTextRange"
          },
          "scopes" : {
            "$ref" : "#/components/schemas/TweetScopes"
          },
          "author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "authorId"
          },
          "organic_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetOrganicMetrics"
            } ],
            "x-ballerina-name" : "organicMetrics"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          }
        },
        "example" : {
          "author_id" : "2244994945",
          "created_at" : "Wed Jan 06 18:40:40 +0000 2021",
          "id" : "1346889436626259968",
          "text" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i",
          "username" : "XDevelopers"
        }
      },
      "MetadataCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MetadataCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Photo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Media"
        }, {
          "$ref" : "#/components/schemas/PhotoAllOf2"
        } ]
      },
      "MediaCategorySubtitles" : {
        "type" : "string",
        "description" : "The media category of uploaded media to which subtitles should be added/deleted",
        "example" : "TweetVideo",
        "enum" : [ "AmplifyVideo", "TweetVideo" ]
      },
      "Get2TweetsSearchAllResponseMeta" : {
        "type" : "object",
        "properties" : {
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "EvaluateNoteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EvaluateNoteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ClientAppId" : {
        "maxLength" : 19,
        "minLength" : 1,
        "type" : "string",
        "description" : "The ID of the client application"
      },
      "DmParticipants" : {
        "maxItems" : 49,
        "minItems" : 2,
        "type" : "array",
        "description" : "Participants for the DM Conversation",
        "items" : {
          "$ref" : "#/components/schemas/UserId"
        }
      },
      "TweetCreateRequestPoll" : {
        "required" : [ "duration_minutes", "options" ],
        "type" : "object",
        "properties" : {
          "duration_minutes" : {
            "maximum" : 10080,
            "minimum" : 5,
            "type" : "integer",
            "description" : "Duration of the poll in minutes",
            "format" : "int32",
            "x-ballerina-name" : "durationMinutes"
          },
          "options" : {
            "maxItems" : 4,
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "maxLength" : 25,
              "minLength" : 1,
              "type" : "string",
              "description" : "The text of a poll choice."
            }
          },
          "reply_settings" : {
            "type" : "string",
            "description" : "Settings to indicate who can reply to the Tweet",
            "enum" : [ "following", "mentionedUsers", "subscribers", "verified" ],
            "x-ballerina-name" : "replySettings"
          }
        },
        "additionalProperties" : false,
        "description" : "Poll options for a Tweet with a poll. This is mutually exclusive from Media, Quote Tweet Id, and Card URI"
      },
      "UserComplianceStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserComplianceData"
          }
        },
        "description" : "User compliance event"
      },
      "InvalidRequestProblem" : {
        "description" : "A problem that indicates this request is invalid",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/InvalidRequestProblemAllOf2"
        } ]
      },
      "RuleNoId" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          },
          "value" : {
            "$ref" : "#/components/schemas/RuleValue"
          }
        },
        "description" : "A user-provided stream filtering rule"
      },
      "SharedInfo" : {
        "required" : [ "shared" ],
        "type" : "object",
        "properties" : {
          "shared" : {
            "type" : "boolean",
            "description" : "Indicates if the media is shared in direct messages",
            "example" : false
          }
        }
      },
      "VideoNonPublicMetrics" : {
        "type" : "object",
        "properties" : {
          "playback_100_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 100% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback100Count"
          },
          "playback_75_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 75% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback75Count"
          },
          "playback_25_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 25% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback25Count"
          },
          "playback_0_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 0% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback0Count"
          },
          "playback_50_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 50% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback50Count"
          }
        },
        "description" : "Nonpublic engagement metrics for the Media at the time of the request"
      },
      "UserProfileModificationObjectSchema" : {
        "required" : [ "event_at", "new_value", "profile_field", "user" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserComplianceSchemaUser"
          },
          "new_value" : {
            "type" : "string",
            "x-ballerina-name" : "newValue"
          },
          "profile_field" : {
            "type" : "string",
            "x-ballerina-name" : "profileField"
          }
        }
      },
      "ListUpdateResponseData" : {
        "type" : "object",
        "properties" : {
          "updated" : {
            "type" : "boolean"
          }
        }
      },
      "Get2UsersByResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserPublicMetrics" : {
        "required" : [ "followers_count", "following_count", "listed_count", "tweet_count" ],
        "type" : "object",
        "properties" : {
          "tweet_count" : {
            "type" : "integer",
            "description" : "The number of Posts (including Retweets) posted by this User",
            "x-ballerina-name" : "tweetCount"
          },
          "like_count" : {
            "type" : "integer",
            "description" : "The number of likes created by this User",
            "x-ballerina-name" : "likeCount"
          },
          "following_count" : {
            "type" : "integer",
            "description" : "Number of Users this User is following",
            "x-ballerina-name" : "followingCount"
          },
          "listed_count" : {
            "type" : "integer",
            "description" : "The number of lists that include this User",
            "x-ballerina-name" : "listedCount"
          },
          "followers_count" : {
            "type" : "integer",
            "description" : "Number of Users who are following this User",
            "x-ballerina-name" : "followersCount"
          }
        },
        "description" : "A list of metrics for this User"
      },
      "TweetCreateRequestReply" : {
        "required" : [ "in_reply_to_tweet_id" ],
        "type" : "object",
        "properties" : {
          "exclude_reply_user_ids" : {
            "type" : "array",
            "description" : "A list of User Ids to be excluded from the reply Tweet",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "excludeReplyUserIds"
          },
          "in_reply_to_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "inReplyToTweetId"
          }
        },
        "additionalProperties" : false,
        "description" : "Tweet information of the Tweet being replied to"
      },
      "TweetEditControls" : {
        "required" : [ "editable_until", "edits_remaining", "is_edit_eligible" ],
        "type" : "object",
        "properties" : {
          "is_edit_eligible" : {
            "type" : "boolean",
            "description" : "Indicates if this Tweet is eligible to be edited",
            "example" : false,
            "x-ballerina-name" : "isEditEligible"
          },
          "edits_remaining" : {
            "type" : "integer",
            "description" : "Number of times this Tweet can be edited",
            "x-ballerina-name" : "editsRemaining"
          },
          "editable_until" : {
            "type" : "string",
            "description" : "Time when Tweet is no longer editable",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z",
            "x-ballerina-name" : "editableUntil"
          }
        }
      },
      "Get2UsersIdFollowingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Problem" : {
        "required" : [ "title", "type" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer"
          }
        },
        "description" : "An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807)",
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "about:blank" : "#/components/schemas/GenericProblem",
            "https://api.twitter.com/2/problems/client-disconnected" : "#/components/schemas/ClientDisconnectedProblem",
            "https://api.twitter.com/2/problems/client-forbidden" : "#/components/schemas/ClientForbiddenProblem",
            "https://api.twitter.com/2/problems/conflict" : "#/components/schemas/ConflictProblem",
            "https://api.twitter.com/2/problems/disallowed-resource" : "#/components/schemas/DisallowedResourceProblem",
            "https://api.twitter.com/2/problems/duplicate-rules" : "#/components/schemas/DuplicateRuleProblem",
            "https://api.twitter.com/2/problems/invalid-request" : "#/components/schemas/InvalidRequestProblem",
            "https://api.twitter.com/2/problems/invalid-rules" : "#/components/schemas/InvalidRuleProblem",
            "https://api.twitter.com/2/problems/noncompliant-rules" : "#/components/schemas/NonCompliantRulesProblem",
            "https://api.twitter.com/2/problems/not-authorized-for-field" : "#/components/schemas/FieldUnauthorizedProblem",
            "https://api.twitter.com/2/problems/not-authorized-for-resource" : "#/components/schemas/ResourceUnauthorizedProblem",
            "https://api.twitter.com/2/problems/operational-disconnect" : "#/components/schemas/OperationalDisconnectProblem",
            "https://api.twitter.com/2/problems/resource-not-found" : "#/components/schemas/ResourceNotFoundProblem",
            "https://api.twitter.com/2/problems/resource-unavailable" : "#/components/schemas/ResourceUnavailableProblem",
            "https://api.twitter.com/2/problems/rule-cap" : "#/components/schemas/RulesCapProblem",
            "https://api.twitter.com/2/problems/streaming-connection" : "#/components/schemas/ConnectionExceptionProblem",
            "https://api.twitter.com/2/problems/unsupported-authentication" : "#/components/schemas/UnsupportedAuthenticationProblem",
            "https://api.twitter.com/2/problems/usage-capped" : "#/components/schemas/UsageCapExceededProblem"
          }
        }
      },
      "RulesCount" : {
        "type" : "object",
        "properties" : {
          "cap_per_project" : {
            "type" : "integer",
            "description" : "Cap of number of rules allowed per project",
            "format" : "int32",
            "x-ballerina-name" : "capPerProject"
          },
          "all_project_client_apps" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AllProjectClientApps"
            } ],
            "x-ballerina-name" : "allProjectClientApps"
          },
          "project_rules_count" : {
            "type" : "integer",
            "description" : "Number of rules for project",
            "format" : "int32",
            "x-ballerina-name" : "projectRulesCount"
          },
          "cap_per_client_app" : {
            "type" : "integer",
            "description" : "Cap of number of rules allowed per client application",
            "format" : "int32",
            "x-ballerina-name" : "capPerClientApp"
          },
          "client_app_rules_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppRulesCount"
            } ],
            "x-ballerina-name" : "clientAppRulesCount"
          }
        },
        "description" : "A count of user-provided stream filtering rules at the application and project levels"
      },
      "Get2FdxAccountsAccountidPaymentNetworksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaidAccountPaymentNetwork"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersIdMentionsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Get2WebhooksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WebhookConfig"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ComplianceJobsResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ReplySettings" : {
        "pattern" : "^[A-Za-z]{1,12}$",
        "type" : "string",
        "description" : "Shows who can reply a Tweet. Fields returned are everyone, mentioned_users, and following",
        "enum" : [ "everyone", "mentionedUsers", "following", "other" ]
      },
      "UploadUrl" : {
        "type" : "string",
        "description" : "URL to which the user will upload their Tweet or user IDs",
        "format" : "uri"
      },
      "ConflictProblem" : {
        "description" : "You cannot create a new job if one is already in progress",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "TweetText" : {
        "type" : "string",
        "description" : "The content of the Tweet",
        "example" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i"
      },
      "TweetHideRequest" : {
        "required" : [ "hidden" ],
        "type" : "object",
        "properties" : {
          "hidden" : {
            "type" : "boolean"
          }
        }
      },
      "KillAllConnectionsResponseData" : {
        "type" : "object",
        "properties" : {
          "killed_connections" : {
            "type" : "boolean",
            "x-ballerina-name" : "killedConnections"
          }
        }
      },
      "EngagementMeasurementValueMetricValues" : {
        "type" : "object",
        "properties" : {
          "metric_type" : {
            "type" : "string",
            "x-ballerina-name" : "metricType"
          },
          "metric_value" : {
            "type" : "number",
            "x-ballerina-name" : "metricValue"
          }
        }
      },
      "EngagementMeasurementMetricsTimeSeries" : {
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          },
          "value" : {
            "$ref" : "#/components/schemas/EngagementMeasurementValue"
          }
        }
      },
      "DmEventReferencedTweets" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "TweetReferencedTweets" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "retweeted", "quoted", "replied_to" ]
          }
        }
      },
      "MediaAnalytics" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MediaAnalyticsData"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2SpacesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CreateNoteRequest" : {
        "title" : "Note",
        "required" : [ "info", "post_id", "test_mode" ],
        "type" : "object",
        "properties" : {
          "post_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "postId"
          },
          "test_mode" : {
            "type" : "boolean",
            "description" : "If true, the note being submitted is only for testing the capability of the bot, and won't be publicly visible. If false, the note being submitted will be a new proposed note on the product",
            "x-ballerina-name" : "testMode"
          },
          "info" : {
            "$ref" : "#/components/schemas/NoteInfo"
          }
        },
        "additionalProperties" : false
      },
      "UserName" : {
        "pattern" : "^[A-Za-z0-9_]{1,15}$",
        "type" : "string",
        "description" : "The X handle (screen name) of this user"
      },
      "Get2ComplianceJobsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComplianceJob"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ComplianceJobsResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2FdxCustomersCurrentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaidCustomer"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CreateDmEventResponseData" : {
        "required" : [ "dm_conversation_id", "dm_event_id" ],
        "type" : "object",
        "properties" : {
          "dm_conversation_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmConversationId"
            } ],
            "x-ballerina-name" : "dmConversationId"
          },
          "dm_event_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmEventId"
            } ],
            "x-ballerina-name" : "dmEventId"
          }
        }
      },
      "Get2TrendsByWoeidWoeidResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Trend"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "StreamingTweetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsFirehoseStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetWithheld" : {
        "required" : [ "copyright", "country_codes" ],
        "type" : "object",
        "properties" : {
          "copyright" : {
            "type" : "boolean",
            "description" : "Indicates if the content is being withheld for on the basis of copyright infringement"
          },
          "scope" : {
            "type" : "string",
            "description" : "Indicates whether the content being withheld is the `tweet` or a `user`",
            "enum" : [ "tweet", "user" ]
          },
          "country_codes" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Provides a list of countries where this content is not available",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "countryCodes"
          }
        },
        "description" : "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country)"
      },
      "AppRulesCount" : {
        "type" : "object",
        "properties" : {
          "client_app_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientAppId"
            } ],
            "x-ballerina-name" : "clientAppId"
          },
          "rule_count" : {
            "type" : "integer",
            "description" : "Number of rules for client application",
            "format" : "int32",
            "x-ballerina-name" : "ruleCount"
          }
        },
        "description" : "A count of user-provided stream filtering rules at the client application level"
      },
      "AudiencePolicy" : {
        "type" : "object",
        "properties" : {
          "x_subscriptions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Any" ]
            },
            "x-ballerina-name" : "xSubscriptions"
          },
          "creator_subscriptions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Any" ]
            },
            "x-ballerina-name" : "creatorSubscriptions"
          }
        }
      },
      "UserProtectComplianceSchema" : {
        "required" : [ "user_protect" ],
        "type" : "object",
        "properties" : {
          "user_protect" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userProtect"
          }
        }
      },
      "PlaidCustomer" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "$ref" : "#/components/schemas/UserId"
          }
        },
        "description" : "A user id for the plaid customer"
      },
      "ConnectionExceptionProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "connection_issue" : {
            "type" : "string",
            "enum" : [ "TooManyConnections", "ProvisioningSubscription", "RuleConfigurationIssue", "RulesInvalidIssue" ],
            "x-ballerina-name" : "connectionIssue"
          }
        }
      },
      "TweetComplianceStreamResponse" : {
        "description" : "Tweet compliance stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetComplianceStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/TweetComplianceStreamResponseTweetComplianceStreamResponseOneOf12"
        } ]
      },
      "UserWithheldComplianceSchema" : {
        "required" : [ "user_withheld" ],
        "type" : "object",
        "properties" : {
          "user_withheld" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserTakedownComplianceSchema"
            } ],
            "x-ballerina-name" : "userWithheld"
          }
        }
      },
      "TweetComplianceSchemaTweet" : {
        "required" : [ "author_id", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "authorId"
          }
        }
      },
      "DmMediaAttachment" : {
        "required" : [ "media_id" ],
        "type" : "object",
        "properties" : {
          "media_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaId"
            } ],
            "x-ballerina-name" : "mediaId"
          }
        }
      },
      "Get2UsersIdBlockingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetNoteTweet" : {
        "type" : "object",
        "properties" : {
          "entities" : {
            "$ref" : "#/components/schemas/TweetNoteTweetEntities"
          },
          "text" : {
            "$ref" : "#/components/schemas/NoteTweetText"
          }
        },
        "description" : "The full-content of the Tweet, including text beyond 280 characters"
      },
      "ResultCount" : {
        "type" : "integer",
        "description" : "The number of results returned in this response",
        "format" : "int32"
      },
      "LikeWithTweetAuthor" : {
        "type" : "object",
        "properties" : {
          "liked_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "likedTweetId"
          },
          "tweet_author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "tweetAuthorId"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Tweet",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z",
            "x-ballerina-name" : "createdAt"
          },
          "timestamp_ms" : {
            "type" : "integer",
            "description" : "Timestamp in milliseconds of creation",
            "format" : "int32",
            "x-ballerina-name" : "timestampMs"
          },
          "id" : {
            "$ref" : "#/components/schemas/LikeId"
          }
        },
        "description" : "A Like event, with the tweet author user and the tweet being liked"
      },
      "EngagementMeasurementMetricsTotal" : {
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          },
          "value" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EngagementMeasurementValueMetricValues"
            }
          }
        }
      },
      "UserSuspendComplianceSchema" : {
        "required" : [ "user_suspend" ],
        "type" : "object",
        "properties" : {
          "user_suspend" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userSuspend"
          }
        }
      },
      "Get2TweetsIdLikingUsersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaUploadResponse" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MediaUploadResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "A response from getting a media upload request status"
      },
      "Subtitles" : {
        "type" : "object",
        "properties" : {
          "language_code" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SubtitleLanguageCode"
            } ],
            "x-ballerina-name" : "languageCode"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          },
          "display_name" : {
            "type" : "string",
            "description" : "Language name in a human readable form",
            "example" : "English",
            "x-ballerina-name" : "displayName"
          }
        }
      },
      "TweetId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers",
        "example" : "1346889436626259968"
      },
      "FoundMediaOrigin" : {
        "required" : [ "id", "provider" ],
        "type" : "object",
        "properties" : {
          "provider" : {
            "type" : "string",
            "description" : "The media provider (e.g., 'giphy') that sourced the media ( <= 8 Characters )",
            "example" : "giphy"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique Identifier of media within provider ( <= 24 characters ))",
            "example" : "u5BzatR15TZ04"
          }
        }
      },
      "VideoPublicMetrics" : {
        "type" : "object",
        "properties" : {
          "view_count" : {
            "type" : "integer",
            "description" : "Number of times this video has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "viewCount"
          }
        },
        "description" : "Engagement metrics for the Media at the time of the request"
      },
      "TweetLabelStreamResponseTweetLabelStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AltText" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "text" : {
            "maxLength" : 1000,
            "type" : "string",
            "description" : "Description of media ( <= 1000 characters )",
            "example" : "A dancing cat"
          }
        }
      },
      "UserUndeleteComplianceSchema" : {
        "required" : [ "user_undelete" ],
        "type" : "object",
        "properties" : {
          "user_undelete" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userUndelete"
          }
        }
      },
      "Get2ListsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/List"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "NoteTweetText" : {
        "type" : "string",
        "description" : "The note content of the Tweet",
        "example" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i"
      },
      "SubscriptionsCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionsCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Geo" : {
        "required" : [ "bbox", "properties", "type" ],
        "type" : "object",
        "properties" : {
          "bbox" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "example" : [ -105.193475, 39.60973, -105.053164, 39.761974 ],
            "items" : {
              "maximum" : 180,
              "minimum" : -180,
              "type" : "number",
              "format" : "double"
            }
          },
          "geometry" : {
            "$ref" : "#/components/schemas/Point"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Feature" ]
          },
          "properties" : {
            "type" : "object"
          }
        }
      },
      "Get2UsersIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdMentionsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersMeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2CommunitiesSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Community"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/BookmarkFolderPostsResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetComplianceData" : {
        "description" : "Tweet compliance data",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetDeleteComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetWithheldComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetDropComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetUndropComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetEditComplianceSchema"
        } ]
      },
      "MuteUserMutationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MuteUserMutationResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Rule" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/RuleId"
          },
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          },
          "value" : {
            "$ref" : "#/components/schemas/RuleValue"
          }
        },
        "description" : "A user-provided stream filtering rule"
      },
      "ListFollowedRequest" : {
        "required" : [ "list_id" ],
        "type" : "object",
        "properties" : {
          "list_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListId"
            } ],
            "x-ballerina-name" : "listId"
          }
        }
      },
      "ClientForbiddenProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "enum" : [ "official-client-forbidden", "client-not-enrolled" ]
          },
          "registration_url" : {
            "type" : "string",
            "format" : "uri",
            "x-ballerina-name" : "registrationUrl"
          }
        }
      },
      "RulesRequestSummary" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RulesRequestSummaryOneOf1"
        }, {
          "$ref" : "#/components/schemas/RulesRequestSummaryRulesRequestSummaryOneOf12"
        } ]
      },
      "AnalyticsData" : {
        "type" : "object",
        "properties" : {
          "timestamped_metrics" : {
            "title" : "Timestamped Metrics",
            "type" : "array",
            "description" : "Array containing metrics data along with the timestamps of their recording",
            "items" : {
              "$ref" : "#/components/schemas/TimestampedMetrics"
            },
            "x-ballerina-name" : "timestampedMetrics"
          },
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "DeleteNoteResponseData" : {
        "required" : [ "deleted" ],
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "TweetNoticeSchema" : {
        "required" : [ "public_tweet_notice" ],
        "type" : "object",
        "properties" : {
          "public_tweet_notice" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetNotice"
            } ],
            "x-ballerina-name" : "publicTweetNotice"
          }
        }
      },
      "UsageCapExceededProblem" : {
        "description" : "A problem that indicates that a usage cap has been exceeded",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/UsageCapExceededProblemAllOf2"
        } ]
      },
      "TweetNotice" : {
        "required" : [ "application", "event_at", "event_type", "tweet" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "type" : "string",
            "description" : "The type of label on the Tweet",
            "example" : "misleading",
            "x-ballerina-name" : "eventType"
          },
          "application" : {
            "type" : "string",
            "description" : "If the label is being applied or removed. Possible values are â€˜applyâ€™ or â€˜removeâ€™",
            "example" : "apply"
          },
          "label_title" : {
            "type" : "string",
            "description" : "Title/header of the Tweet label",
            "x-ballerina-name" : "labelTitle"
          },
          "details" : {
            "type" : "string",
            "description" : "Information shown on the Tweet label"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetComplianceSchemaTweet"
          },
          "extended_details_url" : {
            "type" : "string",
            "description" : "Link to more information about this kind of label",
            "x-ballerina-name" : "extendedDetailsUrl"
          }
        }
      },
      "TweetHideResponseData" : {
        "type" : "object",
        "properties" : {
          "hidden" : {
            "type" : "boolean"
          }
        }
      },
      "GeoRestrictionsGeoRestrictionsOneOf12" : {
        "required" : [ "blacklisted_country_codes", "whitelisted_country_codes" ],
        "type" : "object",
        "properties" : {
          "whitelisted_country_codes" : {
            "maxItems" : 0,
            "minItems" : 0,
            "type" : "array",
            "description" : "List of whitelisted country codes",
            "items" : {
              "pattern" : "^[a-zA-Z]{2}$",
              "type" : "string",
              "description" : "Country code in ISO 3166-1 alpha-2 format",
              "example" : "us"
            },
            "x-ballerina-name" : "whitelistedCountryCodes"
          },
          "blacklisted_country_codes" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "List of blacklisted country codes",
            "items" : {
              "pattern" : "^[a-zA-Z]{2}$",
              "type" : "string",
              "description" : "Country code in ISO 3166-1 alpha-2 format",
              "example" : "us"
            },
            "x-ballerina-name" : "blacklistedCountryCodes"
          }
        }
      },
      "Get2SpacesIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DisplayTextRange" : {
        "maxItems" : 2,
        "minItems" : 2,
        "type" : "array",
        "description" : "Represent a boundary range (start and end zero-based indices) for the portion of text that is displayed for a post. `start` must be smaller than `end`. The start index is inclusive, the end index is exclusive",
        "items" : {
          "minimum" : 0,
          "type" : "integer"
        }
      },
      "SubscriptionsCreateRequest" : {
        "type" : "object"
      },
      "ResourceUnavailableProblemAllOf2" : {
        "required" : [ "parameter", "resource_id", "resource_type" ],
        "type" : "object",
        "properties" : {
          "parameter" : {
            "minLength" : 1,
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          }
        }
      },
      "SubtitlesDeleteRequest" : {
        "type" : "object",
        "properties" : {
          "language_code" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SubtitleLanguageCode"
            } ],
            "x-ballerina-name" : "languageCode"
          },
          "media_category" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCategorySubtitles"
            } ],
            "x-ballerina-name" : "mediaCategory"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        }
      },
      "InvalidRuleProblem" : {
        "description" : "The rule you have submitted is invalid",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "Get2TweetsIdRetweetedByResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "WebhookLinksCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "provisioned" : {
            "type" : "boolean"
          }
        }
      },
      "UrlFields" : {
        "required" : [ "url" ],
        "type" : "object",
        "properties" : {
          "display_url" : {
            "type" : "string",
            "description" : "The URL as displayed in the X client",
            "example" : "twittercommunity.com/t/introducing-â€¦",
            "x-ballerina-name" : "displayUrl"
          },
          "images" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlImage"
            }
          },
          "expanded_url" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Url"
            } ],
            "x-ballerina-name" : "expandedUrl"
          },
          "unwound_url" : {
            "type" : "string",
            "description" : "Fully resolved url",
            "format" : "uri",
            "example" : "https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118",
            "x-ballerina-name" : "unwoundUrl"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the URL landing page",
            "example" : "This is a description of the website."
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the page the URL points to",
            "example" : "Introducing the v2 follow lookup endpoints"
          },
          "media_key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaKey"
            } ],
            "x-ballerina-name" : "mediaKey"
          },
          "url" : {
            "$ref" : "#/components/schemas/Url"
          },
          "status" : {
            "$ref" : "#/components/schemas/HttpStatusCode"
          }
        },
        "description" : "Represent the portion of text recognized as a URL"
      },
      "NoteTestResult" : {
        "type" : "object",
        "properties" : {
          "evaluator_score_bucket" : {
            "type" : "string",
            "description" : "Score bucket from the evaluator result",
            "x-ballerina-name" : "evaluatorScoreBucket"
          },
          "evaluator_type" : {
            "type" : "string",
            "description" : "The type of the evaluator",
            "x-ballerina-name" : "evaluatorType"
          }
        },
        "description" : "The evaluation result of a community note"
      },
      "Get2UsersIdListMembershipsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetCreateRequest" : {
        "type" : "object",
        "properties" : {
          "nullcast" : {
            "type" : "boolean",
            "description" : "Nullcasted (promoted-only) Posts do not appear in the public timeline and are not served to followers",
            "default" : false
          },
          "share_with_followers" : {
            "type" : "boolean",
            "description" : "Share community post with followers too",
            "default" : false,
            "x-ballerina-name" : "shareWithFollowers"
          },
          "media" : {
            "$ref" : "#/components/schemas/TweetCreateRequestMedia"
          },
          "poll" : {
            "$ref" : "#/components/schemas/TweetCreateRequestPoll"
          },
          "geo" : {
            "$ref" : "#/components/schemas/TweetCreateRequestGeo"
          },
          "community_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CommunityId"
            } ],
            "x-ballerina-name" : "communityId"
          },
          "for_super_followers_only" : {
            "type" : "boolean",
            "description" : "Exclusive Tweet for super followers",
            "default" : false,
            "x-ballerina-name" : "forSuperFollowersOnly"
          },
          "quote_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "quoteTweetId"
          },
          "direct_message_deep_link" : {
            "type" : "string",
            "description" : "Link to take the conversation from the public timeline to a private Direct Message",
            "x-ballerina-name" : "directMessageDeepLink"
          },
          "card_uri" : {
            "type" : "string",
            "description" : "Card Uri Parameter. This is mutually exclusive from Quote Tweet Id, Poll, Media, and Direct Message Deep Link",
            "x-ballerina-name" : "cardUri"
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          },
          "reply" : {
            "$ref" : "#/components/schemas/TweetCreateRequestReply"
          },
          "reply_settings" : {
            "type" : "string",
            "description" : "Settings to indicate who can reply to the Tweet",
            "enum" : [ "following", "mentionedUsers", "subscribers", "verified" ],
            "x-ballerina-name" : "replySettings"
          }
        },
        "additionalProperties" : false
      },
      "Get2SpacesSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ComplianceJobsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ManagementInfo" : {
        "required" : [ "managed" ],
        "type" : "object",
        "properties" : {
          "managed" : {
            "type" : "boolean",
            "description" : "Indicates if the media is managed by Media Studio",
            "example" : false
          }
        }
      },
      "TweetDeleteComplianceSchema" : {
        "required" : [ "delete" ],
        "type" : "object",
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "Get2FdxAccountsAccountidResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaidAccount"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetComplianceSchema" : {
        "required" : [ "event_at", "tweet" ],
        "type" : "object",
        "properties" : {
          "quote_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "quoteTweetId"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetComplianceSchemaTweet"
          }
        }
      },
      "SensitiveMediaWarning" : {
        "type" : "object",
        "properties" : {
          "adult_content" : {
            "type" : "boolean",
            "description" : "Indicates if the content contains adult material",
            "example" : true,
            "x-ballerina-name" : "adultContent"
          },
          "other" : {
            "type" : "boolean",
            "description" : "Indicates if the content has other sensitive characteristics",
            "example" : false
          },
          "graphic_violence" : {
            "type" : "boolean",
            "description" : "Indicates if the content depicts graphic violence",
            "example" : true,
            "x-ballerina-name" : "graphicViolence"
          }
        }
      },
      "EntityIndicesInclusiveInclusive" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity starts.  The index is inclusive",
            "example" : 50
          },
          "end" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity ends.  The index is inclusive",
            "example" : 61
          }
        },
        "description" : "Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is inclusive"
      },
      "Get2TweetsSearchAllResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsSearchAllResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "GeoRestrictions" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/GeoRestrictionsOneOf1"
        }, {
          "$ref" : "#/components/schemas/GeoRestrictionsGeoRestrictionsOneOf12"
        } ]
      },
      "MediaUploadConfigRequest" : {
        "type" : "object",
        "properties" : {
          "shared" : {
            "type" : "boolean",
            "description" : "Whether this media is shared or not"
          },
          "media_type" : {
            "type" : "string",
            "description" : "The type of media",
            "example" : "video/mp4",
            "enum" : [ "video/mp4", "video/webm", "video/mp2t", "video/quicktime", "text/srt", "text/vtt", "image/jpeg", "image/gif", "image/bmp", "image/png", "image/webp", "image/pjpeg", "image/tiff", "model/gltf-binary", "model/vnd.usdz+zip" ],
            "x-ballerina-name" : "mediaType"
          },
          "media_category" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCategory"
            } ],
            "x-ballerina-name" : "mediaCategory"
          },
          "additional_owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "additionalOwners"
          },
          "total_bytes" : {
            "maximum" : 17179869184,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The total size of the media upload in bytes",
            "x-ballerina-name" : "totalBytes"
          }
        },
        "additionalProperties" : false
      },
      "MediaUploadResponseData" : {
        "required" : [ "id", "media_key" ],
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "description" : "Size of the upload",
            "format" : "int32"
          },
          "processing_info" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ProcessingInfo"
            } ],
            "x-ballerina-name" : "processingInfo"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          },
          "expires_after_secs" : {
            "type" : "integer",
            "description" : "Number of seconds after which upload session expires",
            "format" : "int32",
            "x-ballerina-name" : "expiresAfterSecs"
          },
          "media_key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaKey"
            } ],
            "x-ballerina-name" : "mediaKey"
          }
        }
      },
      "ListMutateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListMutateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsSearchRecentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsSearchAllResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "PollId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this poll",
        "example" : "1365059861688410112"
      },
      "DmAttachments" : {
        "type" : "array",
        "description" : "Attachments to a DM Event",
        "items" : {
          "$ref" : "#/components/schemas/DmMediaAttachment"
        }
      },
      "PlaidAccountContact" : {
        "required" : [ "addresses", "emails", "name", "telephones" ],
        "type" : "object",
        "properties" : {
          "emails" : {
            "type" : "array",
            "description" : "List of email addresses associated with the account holder",
            "items" : {
              "type" : "string"
            }
          },
          "addresses" : {
            "type" : "array",
            "description" : "List of addresses associated with the account holder",
            "items" : {
              "$ref" : "#/components/schemas/PlaidAddress"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/PlaidName"
          },
          "telephones" : {
            "type" : "array",
            "description" : "List of telephone numbers associated with the account holder",
            "items" : {
              "$ref" : "#/components/schemas/PlaidTelephone"
            }
          },
          "relationship" : {
            "type" : "string",
            "description" : "Relationship of the contact to the account"
          }
        },
        "description" : "Contact information associated with a Plaid account"
      },
      "DeleteNoteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteNoteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DmConversationId" : {
        "pattern" : "^([0-9]{1,19}-[0-9]{1,19}|[0-9]{15,19})$",
        "type" : "string",
        "description" : "Unique identifier of a DM conversation. This can either be a numeric string, or a pair of numeric strings separated by a '-' character in the case of one-on-one DM Conversations",
        "example" : "123123123-456456456"
      },
      "Sticker" : {
        "type" : "object",
        "properties" : {
          "transform_d" : {
            "type" : "number",
            "description" : "Scale or rotate the media on the y-axis",
            "format" : "double",
            "example" : 1.0,
            "x-ballerina-name" : "transformD"
          },
          "transform_ty" : {
            "type" : "number",
            "description" : "The vertical translation (shift) value for the media",
            "format" : "double",
            "example" : -5.2,
            "x-ballerina-name" : "transformTy"
          },
          "aspect_ratio" : {
            "type" : "number",
            "description" : "width-to-height ratio of the media",
            "format" : "double",
            "example" : 1.78,
            "x-ballerina-name" : "aspectRatio"
          },
          "transform_c" : {
            "type" : "number",
            "description" : "Skew the media on the y-axis",
            "format" : "double",
            "example" : 0.0,
            "x-ballerina-name" : "transformC"
          },
          "group_annotation_id" : {
            "type" : "number",
            "description" : "A unique identifier for the group of annotations associated with the media",
            "format" : "long",
            "example" : 987654321098765,
            "x-ballerina-name" : "groupAnnotationId"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for sticker",
            "example" : "12345"
          },
          "sticker_set_annotation_id" : {
            "type" : "number",
            "description" : "A unique identifier for the sticker set associated with the media",
            "format" : "long",
            "example" : 123456789012345,
            "x-ballerina-name" : "stickerSetAnnotationId"
          },
          "transform_b" : {
            "type" : "number",
            "description" : "Skew the media on the x-axis",
            "format" : "double",
            "example" : 0.0,
            "x-ballerina-name" : "transformB"
          },
          "transform_a" : {
            "type" : "number",
            "description" : "Scale or rotate the media on the x-axis",
            "format" : "double",
            "example" : 1.0,
            "x-ballerina-name" : "transformA"
          },
          "transform_tx" : {
            "type" : "number",
            "description" : "Scale or rotate the media on the x-axis",
            "format" : "double",
            "example" : 10.5,
            "x-ballerina-name" : "transformTx"
          }
        }
      },
      "Get2DmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2DmConversationsIdDmEventsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Get2UsersIdBookmarksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "WebhookConfigPutResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WebhookConfigPutResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2ComplianceJobsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "FieldUnauthorizedProblemAllOf2" : {
        "required" : [ "field", "resource_type", "section" ],
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "section" : {
            "type" : "string",
            "enum" : [ "data", "includes" ]
          }
        }
      },
      "UnlikeComplianceSchemaFavorite" : {
        "required" : [ "id", "user_id" ],
        "type" : "object",
        "properties" : {
          "user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "userId"
          },
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "MediaUploadRequestOneShot" : {
        "required" : [ "media", "media_category" ],
        "type" : "object",
        "properties" : {
          "shared" : {
            "type" : "boolean",
            "description" : "Whether this media is shared or not",
            "default" : false
          },
          "media_type" : {
            "type" : "string",
            "description" : "The type of image or subtitle",
            "example" : "image/png",
            "enum" : [ "text/srt", "text/vtt", "image/jpeg", "image/bmp", "image/png", "image/webp", "image/pjpeg", "image/tiff" ],
            "x-ballerina-name" : "mediaType"
          },
          "media_category" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaCategoryOneShot"
            } ],
            "x-ballerina-name" : "mediaCategory"
          },
          "additional_owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "additionalOwners"
          },
          "media" : {
            "anyOf" : [ {
              "$ref" : "#/components/schemas/MediaPayloadBinary"
            }, {
              "$ref" : "#/components/schemas/MediaPayloadByte"
            } ]
          }
        },
        "additionalProperties" : false
      },
      "SubscriptionsCountGetResponseData" : {
        "required" : [ "account_name", "provisioned_count", "subscriptions_count_all", "subscriptions_count_direct_messages" ],
        "type" : "object",
        "properties" : {
          "provisioned_count" : {
            "type" : "string",
            "description" : "The limit for subscriptions for this app",
            "x-ballerina-name" : "provisionedCount"
          },
          "subscriptions_count_all" : {
            "type" : "string",
            "description" : "The number of active subscriptions across all webhooks",
            "x-ballerina-name" : "subscriptionsCountAll"
          },
          "account_name" : {
            "type" : "string",
            "description" : "The account name",
            "x-ballerina-name" : "accountName"
          },
          "subscriptions_count_direct_messages" : {
            "type" : "string",
            "description" : "The number of active direct message subscriptions",
            "x-ballerina-name" : "subscriptionsCountDirectMessages"
          }
        },
        "description" : "The count of active subscriptions across all webhooks"
      },
      "Get2SpacesByCreatorIdsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ComplianceJobsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "KillAllConnectionsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/KillAllConnectionsResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "OldestId" : {
        "type" : "string",
        "description" : "The oldest id in this response"
      },
      "ListCreateResponseData" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of this List"
          },
          "id" : {
            "$ref" : "#/components/schemas/ListId"
          }
        },
        "description" : "A X List is a curated group of accounts"
      },
      "CreateComplianceJobResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ComplianceJob"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "NoteId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this Community Note",
        "example" : "1146654567674912769"
      },
      "MuteUserMutationResponseData" : {
        "type" : "object",
        "properties" : {
          "muting" : {
            "type" : "boolean"
          }
        }
      },
      "Media" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/MediaWidth"
          },
          "type" : {
            "type" : "string"
          },
          "media_key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaKey"
            } ],
            "x-ballerina-name" : "mediaKey"
          },
          "height" : {
            "$ref" : "#/components/schemas/MediaHeight"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "animated_gif" : "#/components/schemas/AnimatedGif",
            "photo" : "#/components/schemas/Photo",
            "video" : "#/components/schemas/Video"
          }
        }
      },
      "UsersRetweetsDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersRetweetsDeleteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "WebhookConfigCreateResponse" : {
        "required" : [ "created_at", "id", "url", "valid" ],
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "boolean"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "id" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          },
          "url" : {
            "type" : "string",
            "description" : "The callback URL of the webhook"
          }
        },
        "description" : "A Webhook Configuration"
      },
      "MediaMetrics" : {
        "type" : "object",
        "properties" : {
          "playback50" : {
            "title" : "Playback 50%",
            "type" : "integer",
            "description" : "Tracks the number of times a video reaches 50% of its duration"
          },
          "watch_time_ms" : {
            "title" : "Watch Time (ms)",
            "type" : "integer",
            "description" : "Tracks the total time spent watching a video, measured in milliseconds",
            "x-ballerina-name" : "watchTimeMs"
          },
          "play_from_tap" : {
            "title" : "Play From Tap",
            "type" : "integer",
            "description" : "Tracks the number of times a video or media is played from a user tap",
            "x-ballerina-name" : "playFromTap"
          },
          "playback_complete" : {
            "title" : "Playback Complete",
            "type" : "integer",
            "description" : "Tracks the number of times a video is played to completion",
            "x-ballerina-name" : "playbackComplete"
          },
          "playback_start" : {
            "title" : "Playback Start",
            "type" : "integer",
            "description" : "Tracks the number of times a video playback is initiated",
            "x-ballerina-name" : "playbackStart"
          },
          "video_views" : {
            "title" : "Video Views",
            "type" : "integer",
            "description" : "Tracks the number of times a video is viewed",
            "x-ballerina-name" : "videoViews"
          },
          "cta_url_clicks" : {
            "title" : "CTA URL Clicks",
            "type" : "integer",
            "description" : "Tracks the number of clicks on a call-to-action URL",
            "x-ballerina-name" : "ctaUrlClicks"
          },
          "playback25" : {
            "title" : "Playback 25%",
            "type" : "integer",
            "description" : "Tracks the number of times a video reaches 25% of its duration"
          },
          "playback75" : {
            "title" : "Playback 75%",
            "type" : "integer",
            "description" : "Tracks the number of times a video reaches 75% of its duration"
          },
          "cta_watch_clicks" : {
            "title" : "CTA Watch Clicks",
            "type" : "integer",
            "description" : "Tracks the number of clicks to watch a video or media content",
            "x-ballerina-name" : "ctaWatchClicks"
          }
        }
      },
      "DeleteRulesRequestDelete" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "Values of all deleted user-specified stream filtering rules",
            "items" : {
              "$ref" : "#/components/schemas/RuleValue"
            }
          },
          "ids" : {
            "type" : "array",
            "description" : "IDs of all deleted user-specified stream filtering rules",
            "items" : {
              "$ref" : "#/components/schemas/RuleId"
            }
          }
        },
        "description" : "IDs and values of all deleted user-specified stream filtering rules"
      },
      "TweetNonPublicMetrics" : {
        "type" : "object",
        "properties" : {
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Nonpublic engagement metrics for the Tweet at the time of the request"
      },
      "Get2ComplianceJobsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ComplianceJob"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "GeoRestrictionsOneOf1" : {
        "required" : [ "blacklisted_country_codes", "whitelisted_country_codes" ],
        "type" : "object",
        "properties" : {
          "whitelisted_country_codes" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "List of whitelisted country codes",
            "items" : {
              "pattern" : "^[a-zA-Z]{2}$",
              "type" : "string",
              "description" : "Country code in ISO 3166-1 alpha-2 format",
              "example" : "us"
            },
            "x-ballerina-name" : "whitelistedCountryCodes"
          },
          "blacklisted_country_codes" : {
            "maxItems" : 0,
            "minItems" : 0,
            "type" : "array",
            "description" : "List of blacklisted country codes",
            "items" : {
              "pattern" : "^[a-zA-Z]{2}$",
              "type" : "string",
              "description" : "Country code in ISO 3166-1 alpha-2 format",
              "example" : "us"
            },
            "x-ballerina-name" : "blacklistedCountryCodes"
          }
        }
      },
      "Get2UsersIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TimestampedMetrics" : {
        "type" : "object",
        "properties" : {
          "metrics" : {
            "$ref" : "#/components/schemas/Metrics"
          },
          "timestamp" : {
            "title" : "Timestamp",
            "type" : "string",
            "description" : "ISO8601 Time",
            "example" : "2025-03-17T06:30:00Z"
          }
        }
      },
      "FilteredStreamingTweetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "matching_rules" : {
            "type" : "array",
            "description" : "The list of rules which matched the Tweet",
            "items" : {
              "$ref" : "#/components/schemas/FilteredStreamingTweetResponseMatchingRules"
            },
            "x-ballerina-name" : "matchingRules"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "A Tweet or error that can be returned by the streaming Tweet API. The values returned with a successful streamed Tweet includes the user provided rules that the Tweet matched"
      },
      "TweetLabelStreamResponse" : {
        "description" : "Tweet label stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetLabelStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/TweetLabelStreamResponseTweetLabelStreamResponseOneOf12"
        } ]
      },
      "User" : {
        "required" : [ "id", "name", "username" ],
        "type" : "object",
        "properties" : {
          "pinned_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "pinnedTweetId"
          },
          "connection_status" : {
            "minItems" : 0,
            "type" : "array",
            "description" : "Returns detailed information about the relationship between two users",
            "items" : {
              "type" : "string",
              "description" : "Type of connection between users.",
              "enum" : [ "follow_request_received", "follow_request_sent", "blocking", "followed_by", "following", "muting" ]
            },
            "x-ballerina-name" : "connectionStatus"
          },
          "public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserPublicMetrics"
            } ],
            "x-ballerina-name" : "publicMetrics"
          },
          "verified" : {
            "type" : "boolean",
            "description" : "Indicate if this User is a verified X User"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of this User",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "description" : {
            "type" : "string",
            "description" : "The text of this User's profile description (also known as bio), if the User provided one"
          },
          "profile_image_url" : {
            "type" : "string",
            "description" : "The URL to the profile image for this User",
            "format" : "uri",
            "x-ballerina-name" : "profileImageUrl"
          },
          "receives_your_dm" : {
            "type" : "boolean",
            "description" : "Indicates if you can send a DM to this User",
            "x-ballerina-name" : "receivesYourDm"
          },
          "verified_type" : {
            "type" : "string",
            "description" : "The X Blue verified type of the user, eg: blue, government, business or none",
            "enum" : [ "blue", "government", "business", "none" ],
            "x-ballerina-name" : "verifiedType"
          },
          "withheld" : {
            "$ref" : "#/components/schemas/UserWithheld"
          },
          "url" : {
            "type" : "string",
            "description" : "The URL specified in the User's profile"
          },
          "profile_banner_url" : {
            "type" : "string",
            "description" : "The URL to the profile banner for this User",
            "format" : "uri",
            "x-ballerina-name" : "profileBannerUrl"
          },
          "most_recent_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "mostRecentTweetId"
          },
          "protected" : {
            "type" : "boolean",
            "description" : "Indicates if this User has chosen to protect their Posts (in other words, if this User's Posts are private)"
          },
          "affiliation" : {
            "$ref" : "#/components/schemas/UserAffiliation"
          },
          "entities" : {
            "$ref" : "#/components/schemas/UserEntities"
          },
          "name" : {
            "type" : "string",
            "description" : "The friendly name of this User, as shown on their profile"
          },
          "location" : {
            "type" : "string",
            "description" : "The location specified in the User's profile, if the User provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries"
          },
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "subscription_type" : {
            "type" : "string",
            "description" : "The X Blue subscription type of the user, eg: Basic, Premium, PremiumPlus or None",
            "enum" : [ "Basic", "Premium", "PremiumPlus", "None" ],
            "x-ballerina-name" : "subscriptionType"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          }
        },
        "description" : "The X User object",
        "example" : {
          "created_at" : "2013-12-14T04:35:55Z",
          "id" : "2244994945",
          "name" : "X Dev",
          "protected" : false,
          "username" : "TwitterDev"
        }
      },
      "MediaCategoryOneShot" : {
        "type" : "string",
        "description" : "A string enum value which identifies a media use-case. This identifier is used to enforce use-case specific constraints (e.g. file size) and enable advanced features",
        "example" : "tweet_image",
        "enum" : [ "tweet_image", "dm_image", "subtitles" ]
      },
      "BookmarkFoldersResponseData" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/BookmarkFolderId"
          }
        }
      },
      "MediaUploadAppendRequestMediaUploadAppendRequestAnyOf12" : {
        "required" : [ "media", "segment_index" ],
        "type" : "object",
        "properties" : {
          "segment_index" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaSegments"
            } ],
            "x-ballerina-name" : "segmentIndex"
          },
          "media" : {
            "$ref" : "#/components/schemas/MediaPayloadByte"
          }
        }
      },
      "RuleId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this rule",
        "example" : "120897978112909812"
      },
      "UserSearchQueryVnext" : {
        "pattern" : "^[A-Za-z0-9_' ]{1,50}$",
        "type" : "string",
        "description" : "The the search string by which to query for users"
      },
      "BookmarkFoldersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BookmarkFoldersResponseData"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/BookmarkFolderPostsResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "WebhookConfigDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteDmResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersIdMutingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2CommunitiesIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Community"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsFirehoseStreamLangJaResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2DmConversationsIdDmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserUnsuspendComplianceSchema" : {
        "required" : [ "user_unsuspend" ],
        "type" : "object",
        "properties" : {
          "user_unsuspend" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userUnsuspend"
          }
        }
      },
      "TweetEditComplianceSchema" : {
        "required" : [ "tweet_edit" ],
        "type" : "object",
        "properties" : {
          "tweet_edit" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetEditComplianceObjectSchema"
            } ],
            "x-ballerina-name" : "tweetEdit"
          }
        }
      },
      "OperationalDisconnectProblem" : {
        "description" : "You have been disconnected for operational reasons",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/OperationalDisconnectProblemAllOf2"
        } ]
      },
      "TweetLabelStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetLabelData"
          }
        },
        "description" : "Tweet Label event"
      },
      "ContentExpiration" : {
        "required" : [ "timestamp_sec" ],
        "type" : "object",
        "properties" : {
          "timestamp_sec" : {
            "type" : "number",
            "description" : "Expiration time for content as a Unix timestamp in seconds",
            "format" : "long",
            "example" : 1740787200,
            "x-ballerina-name" : "timestampSec"
          }
        }
      },
      "UsersLikesCreateRequest" : {
        "required" : [ "tweet_id" ],
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          }
        }
      },
      "SpaceId" : {
        "pattern" : "^[a-zA-Z0-9]{1,13}$",
        "type" : "string",
        "description" : "The unique identifier of this Space",
        "example" : "1SLjjRYNejbKM"
      },
      "MediaPayloadByte" : {
        "type" : "string",
        "description" : "The file to upload",
        "format" : "byte"
      },
      "Poll" : {
        "required" : [ "id", "options" ],
        "type" : "object",
        "properties" : {
          "voting_status" : {
            "type" : "string",
            "enum" : [ "open", "closed" ],
            "x-ballerina-name" : "votingStatus"
          },
          "duration_minutes" : {
            "maximum" : 10080,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "durationMinutes"
          },
          "end_datetime" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "endDatetime"
          },
          "options" : {
            "maxItems" : 4,
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PollOption"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/PollId"
          }
        },
        "description" : "Represent a Poll attached to a Tweet"
      },
      "PersonalizedTrend" : {
        "type" : "object",
        "properties" : {
          "trend_name" : {
            "type" : "string",
            "description" : "Name of the trend",
            "x-ballerina-name" : "trendName"
          },
          "trending_since" : {
            "type" : "string",
            "description" : "Time since this is trending",
            "x-ballerina-name" : "trendingSince"
          },
          "post_count" : {
            "type" : "integer",
            "description" : "Number of posts pertaining to this trend",
            "x-ballerina-name" : "postCount"
          },
          "category" : {
            "type" : "string",
            "description" : "Category of this trend"
          }
        },
        "description" : "A trend"
      }
    },
    "parameters" : {
      "AnalyticsFieldsParameter" : {
        "name" : "analytics.fields",
        "in" : "query",
        "description" : "A comma separated list of Analytics fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Analytics object.",
          "example" : [ "app_install_attempts", "app_opens", "bookmarks", "detail_expands", "email_tweet", "engagements", "follows", "hashtag_clicks", "id", "impressions", "likes", "media_views", "permalink_clicks", "quote_tweets", "replies", "retweets", "shares", "timestamp", "unfollows", "url_clicks", "user_profile_clicks" ],
          "items" : {
            "type" : "string",
            "enum" : [ "app_install_attempts", "app_opens", "bookmarks", "detail_expands", "email_tweet", "engagements", "follows", "hashtag_clicks", "id", "impressions", "likes", "media_views", "permalink_clicks", "quote_tweets", "replies", "retweets", "shares", "timestamp", "unfollows", "url_clicks", "user_profile_clicks" ]
          }
        },
        "x-ballerina-name" : "analyticsFields"
      },
      "CommunityFieldsParameter" : {
        "name" : "community.fields",
        "in" : "query",
        "description" : "A comma separated list of Community fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Community object.",
          "example" : [ "access", "created_at", "description", "id", "join_policy", "member_count", "name" ],
          "items" : {
            "type" : "string",
            "enum" : [ "access", "created_at", "description", "id", "join_policy", "member_count", "name" ]
          }
        },
        "x-ballerina-name" : "communityFields"
      },
      "ComplianceJobFieldsParameter" : {
        "name" : "compliance_job.fields",
        "in" : "query",
        "description" : "A comma separated list of ComplianceJob fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a ComplianceJob object.",
          "example" : [ "created_at", "download_expires_at", "download_url", "id", "name", "resumable", "status", "type", "upload_expires_at", "upload_url" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "download_expires_at", "download_url", "id", "name", "resumable", "status", "type", "upload_expires_at", "upload_url" ]
          }
        },
        "x-ballerina-name" : "complianceJobFields"
      },
      "DmConversationFieldsParameter" : {
        "name" : "dm_conversation.fields",
        "in" : "query",
        "description" : "A comma separated list of DmConversation fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a DmConversation object.",
          "example" : [ "id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "id" ]
          }
        }
      },
      "DmEventExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [DmEvent](#DmEvent) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "attachments.media_keys", "participant_ids", "referenced_tweets.id", "sender_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "attachments.media_keys", "participant_ids", "referenced_tweets.id", "sender_id" ]
          }
        }
      },
      "DmEventFieldsParameter" : {
        "name" : "dm_event.fields",
        "in" : "query",
        "description" : "A comma separated list of DmEvent fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a DmEvent object.",
          "example" : [ "attachments", "created_at", "dm_conversation_id", "entities", "event_type", "id", "participant_ids", "referenced_tweets", "sender_id", "text" ],
          "items" : {
            "type" : "string",
            "enum" : [ "attachments", "created_at", "dm_conversation_id", "entities", "event_type", "id", "participant_ids", "referenced_tweets", "sender_id", "text" ]
          }
        },
        "x-ballerina-name" : "dmEventFields"
      },
      "EngagementFieldsParameter" : {
        "name" : "engagement.fields",
        "in" : "query",
        "description" : "A comma separated list of Engagement fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Engagement object.",
          "example" : [ "errors", "measurement" ],
          "items" : {
            "type" : "string",
            "enum" : [ "errors", "measurement" ]
          }
        },
        "x-ballerina-name" : "engagementFields"
      },
      "LikeExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [Like](#Like) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "liked_tweet_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "liked_tweet_id" ]
          }
        }
      },
      "LikeFieldsParameter" : {
        "name" : "like.fields",
        "in" : "query",
        "description" : "A comma separated list of Like fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Like object.",
          "example" : [ "created_at", "id", "liked_tweet_id", "timestamp_ms" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "id", "liked_tweet_id", "timestamp_ms" ]
          }
        }
      },
      "LikeWithTweetAuthorExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [LikeWithTweetAuthor](#LikeWithTweetAuthor) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "liked_tweet_author_id", "liked_tweet_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "liked_tweet_author_id", "liked_tweet_id" ]
          }
        }
      },
      "LikeWithTweetAuthorFieldsParameter" : {
        "name" : "like_with_tweet_author.fields",
        "in" : "query",
        "description" : "A comma separated list of LikeWithTweetAuthor fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a LikeWithTweetAuthor object.",
          "example" : [ "created_at", "id", "liked_tweet_author_id", "liked_tweet_id", "timestamp_ms" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "id", "liked_tweet_author_id", "liked_tweet_id", "timestamp_ms" ]
          }
        },
        "x-ballerina-name" : "likeWithTweetAuthorFields"
      },
      "ListExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [List](#List) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "owner_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "owner_id" ]
          }
        }
      },
      "ListFieldsParameter" : {
        "name" : "list.fields",
        "in" : "query",
        "description" : "A comma separated list of List fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a List object.",
          "example" : [ "created_at", "description", "follower_count", "id", "member_count", "name", "owner_id", "private" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "description", "follower_count", "id", "member_count", "name", "owner_id", "private" ]
          }
        },
        "x-ballerina-name" : "listFields"
      },
      "MediaAnalyticsFieldsParameter" : {
        "name" : "media_analytics.fields",
        "in" : "query",
        "description" : "A comma separated list of MediaAnalytics fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a MediaAnalytics object.",
          "example" : [ "cta_url_clicks", "cta_watch_clicks", "media_key", "play_from_tap", "playback25", "playback50", "playback75", "playback_complete", "playback_start", "timestamp", "video_views", "watch_time_ms" ],
          "items" : {
            "type" : "string",
            "enum" : [ "cta_url_clicks", "cta_watch_clicks", "media_key", "play_from_tap", "playback25", "playback50", "playback75", "playback_complete", "playback_start", "timestamp", "video_views", "watch_time_ms" ]
          }
        },
        "x-ballerina-name" : "mediaAnalyticsFields"
      },
      "MediaFieldsParameter" : {
        "name" : "media.fields",
        "in" : "query",
        "description" : "A comma separated list of Media fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Media object.",
          "example" : [ "alt_text", "duration_ms", "height", "media_key", "non_public_metrics", "organic_metrics", "preview_image_url", "promoted_metrics", "public_metrics", "type", "url", "variants", "width" ],
          "items" : {
            "type" : "string",
            "enum" : [ "alt_text", "duration_ms", "height", "media_key", "non_public_metrics", "organic_metrics", "preview_image_url", "promoted_metrics", "public_metrics", "type", "url", "variants", "width" ]
          }
        },
        "x-ballerina-name" : "mediaFields"
      },
      "NoteFieldsParameter" : {
        "name" : "note.fields",
        "in" : "query",
        "description" : "A comma separated list of Note fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Note object.",
          "example" : [ "id", "info", "status", "test_result" ],
          "items" : {
            "type" : "string",
            "enum" : [ "id", "info", "status", "test_result" ]
          }
        },
        "x-ballerina-name" : "noteFields"
      },
      "PersonalizedTrendFieldsParameter" : {
        "name" : "personalized_trend.fields",
        "in" : "query",
        "description" : "A comma separated list of PersonalizedTrend fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a PersonalizedTrend object.",
          "example" : [ "category", "post_count", "trend_name", "trending_since" ],
          "items" : {
            "type" : "string",
            "enum" : [ "category", "post_count", "trend_name", "trending_since" ]
          }
        },
        "x-ballerina-name" : "personalizedTrendFields"
      },
      "PlaceFieldsParameter" : {
        "name" : "place.fields",
        "in" : "query",
        "description" : "A comma separated list of Place fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Place object.",
          "example" : [ "contained_within", "country", "country_code", "full_name", "geo", "id", "name", "place_type" ],
          "items" : {
            "type" : "string",
            "enum" : [ "contained_within", "country", "country_code", "full_name", "geo", "id", "name", "place_type" ]
          }
        },
        "x-ballerina-name" : "placeFields"
      },
      "PlaidAccountContactFieldsParameter" : {
        "name" : "plaid_account_contact.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccountContact fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a PlaidAccountContact object.",
          "example" : [ "addresses", "emails", "holders", "telephones" ],
          "items" : {
            "type" : "string",
            "enum" : [ "addresses", "emails", "holders", "telephones" ]
          }
        }
      },
      "PlaidAccountFieldsParameter" : {
        "name" : "plaid_account.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccount fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a PlaidAccount object.",
          "example" : [ "accountCategory", "accountId", "accountNumberDisplay", "accountType", "availableBalance", "currency", "currentBalance", "nickname", "productName", "status" ],
          "items" : {
            "type" : "string",
            "enum" : [ "accountCategory", "accountId", "accountNumberDisplay", "accountType", "availableBalance", "currency", "currentBalance", "nickname", "productName", "status" ]
          }
        }
      },
      "PlaidAccountPaymentNetworkFieldsParameter" : {
        "name" : "plaid_account_payment_network.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccountPaymentNetwork fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a PlaidAccountPaymentNetwork object.",
          "example" : [ "bankId", "identifier", "transferIn", "transferOut", "type" ],
          "items" : {
            "type" : "string",
            "enum" : [ "bankId", "identifier", "transferIn", "transferOut", "type" ]
          }
        }
      },
      "PlaidAccountTransactionFieldsParameter" : {
        "name" : "plaid_account_transaction.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccountTransaction fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a PlaidAccountTransaction object.",
          "example" : [ "accountCategory", "amount", "debitCreditMemo", "description", "postedTimestamp", "status", "transactionId", "transactionTimestamp" ],
          "items" : {
            "type" : "string",
            "enum" : [ "accountCategory", "amount", "debitCreditMemo", "description", "postedTimestamp", "status", "transactionId", "transactionTimestamp" ]
          }
        }
      },
      "PlaidCustomerFieldsParameter" : {
        "name" : "plaid_customer.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidCustomer fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a PlaidCustomer object.",
          "example" : [ "customerId" ],
          "items" : {
            "type" : "string",
            "enum" : [ "customerId" ]
          }
        }
      },
      "PollFieldsParameter" : {
        "name" : "poll.fields",
        "in" : "query",
        "description" : "A comma separated list of Poll fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Poll object.",
          "example" : [ "duration_minutes", "end_datetime", "id", "options", "voting_status" ],
          "items" : {
            "type" : "string",
            "enum" : [ "duration_minutes", "end_datetime", "id", "options", "voting_status" ]
          }
        },
        "x-ballerina-name" : "pollFields"
      },
      "RulesCountFieldsParameter" : {
        "name" : "rules_count.fields",
        "in" : "query",
        "description" : "A comma separated list of RulesCount fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a RulesCount object.",
          "example" : [ "all_project_client_apps", "cap_per_client_app", "cap_per_project", "client_app_rules_count", "project_rules_count" ],
          "items" : {
            "type" : "string",
            "enum" : [ "all_project_client_apps", "cap_per_client_app", "cap_per_project", "client_app_rules_count", "project_rules_count" ]
          }
        },
        "x-ballerina-name" : "rulesCountFields"
      },
      "SearchCountFieldsParameter" : {
        "name" : "search_count.fields",
        "in" : "query",
        "description" : "A comma separated list of SearchCount fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a SearchCount object.",
          "example" : [ "end", "start", "tweet_count" ],
          "items" : {
            "type" : "string",
            "enum" : [ "end", "start", "tweet_count" ]
          }
        },
        "x-ballerina-name" : "searchCountFields"
      },
      "SpaceExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [Space](#Space) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "creator_id", "host_ids", "invited_user_ids", "speaker_ids", "topic_ids" ],
          "items" : {
            "type" : "string",
            "enum" : [ "creator_id", "host_ids", "invited_user_ids", "speaker_ids", "topic_ids" ]
          }
        }
      },
      "SpaceFieldsParameter" : {
        "name" : "space.fields",
        "in" : "query",
        "description" : "A comma separated list of Space fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Space object.",
          "example" : [ "created_at", "creator_id", "ended_at", "host_ids", "id", "invited_user_ids", "is_ticketed", "lang", "participant_count", "scheduled_start", "speaker_ids", "started_at", "state", "subscriber_count", "title", "topic_ids", "updated_at" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "creator_id", "ended_at", "host_ids", "id", "invited_user_ids", "is_ticketed", "lang", "participant_count", "scheduled_start", "speaker_ids", "started_at", "state", "subscriber_count", "title", "topic_ids", "updated_at" ]
          }
        },
        "x-ballerina-name" : "spaceFields"
      },
      "TopicFieldsParameter" : {
        "name" : "topic.fields",
        "in" : "query",
        "description" : "A comma separated list of Topic fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Topic object.",
          "example" : [ "description", "id", "name" ],
          "items" : {
            "type" : "string",
            "enum" : [ "description", "id", "name" ]
          }
        },
        "x-ballerina-name" : "topicFields"
      },
      "TrendFieldsParameter" : {
        "name" : "trend.fields",
        "in" : "query",
        "description" : "A comma separated list of Trend fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Trend object.",
          "example" : [ "trend_name", "tweet_count" ],
          "items" : {
            "type" : "string",
            "enum" : [ "trend_name", "tweet_count" ]
          }
        },
        "x-ballerina-name" : "trendFields"
      },
      "TweetExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [Tweet](#Tweet) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "article.cover_media", "article.media_entities", "attachments.media_keys", "attachments.media_source_tweet", "attachments.poll_ids", "author_id", "edit_history_tweet_ids", "entities.mentions.username", "geo.place_id", "in_reply_to_user_id", "entities.note.mentions.username", "referenced_tweets.id", "referenced_tweets.id.attachments.media_keys", "referenced_tweets.id.author_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "article.cover_media", "article.media_entities", "attachments.media_keys", "attachments.media_source_tweet", "attachments.poll_ids", "author_id", "edit_history_tweet_ids", "entities.mentions.username", "geo.place_id", "in_reply_to_user_id", "entities.note.mentions.username", "referenced_tweets.id", "referenced_tweets.id.attachments.media_keys", "referenced_tweets.id.author_id" ]
          }
        }
      },
      "TweetFieldsParameter" : {
        "name" : "tweet.fields",
        "in" : "query",
        "description" : "A comma separated list of Tweet fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Tweet object.",
          "example" : [ "article", "attachments", "author_id", "card_uri", "community_id", "context_annotations", "conversation_id", "created_at", "display_text_range", "edit_controls", "edit_history_tweet_ids", "entities", "geo", "id", "in_reply_to_user_id", "lang", "media_metadata", "non_public_metrics", "note_tweet", "organic_metrics", "possibly_sensitive", "promoted_metrics", "public_metrics", "referenced_tweets", "reply_settings", "scopes", "source", "suggested_source_links", "text", "withheld" ],
          "items" : {
            "type" : "string",
            "enum" : [ "article", "attachments", "author_id", "card_uri", "community_id", "context_annotations", "conversation_id", "created_at", "display_text_range", "edit_controls", "edit_history_tweet_ids", "entities", "geo", "id", "in_reply_to_user_id", "lang", "media_metadata", "non_public_metrics", "note_tweet", "organic_metrics", "possibly_sensitive", "promoted_metrics", "public_metrics", "referenced_tweets", "reply_settings", "scopes", "source", "suggested_source_links", "text", "withheld" ]
          }
        },
        "x-ballerina-name" : "tweetFields"
      },
      "UsageFieldsParameter" : {
        "name" : "usage.fields",
        "in" : "query",
        "description" : "A comma separated list of Usage fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Usage object.",
          "example" : [ "cap_reset_day", "daily_client_app_usage", "daily_project_usage", "project_cap", "project_id", "project_usage" ],
          "items" : {
            "type" : "string",
            "enum" : [ "cap_reset_day", "daily_client_app_usage", "daily_project_usage", "project_cap", "project_id", "project_usage" ]
          }
        },
        "x-ballerina-name" : "usageFields"
      },
      "UserExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [User](#User) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "affiliation.user_id", "most_recent_tweet_id", "pinned_tweet_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "affiliation.user_id", "most_recent_tweet_id", "pinned_tweet_id" ]
          }
        }
      },
      "UserFieldsParameter" : {
        "name" : "user.fields",
        "in" : "query",
        "description" : "A comma separated list of User fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a User object.",
          "example" : [ "affiliation", "confirmed_email", "connection_status", "created_at", "description", "entities", "id", "is_identity_verified", "location", "most_recent_tweet_id", "name", "parody", "pinned_tweet_id", "profile_banner_url", "profile_image_url", "protected", "public_metrics", "receives_your_dm", "subscription", "subscription_type", "url", "username", "verified", "verified_followers_count", "verified_type", "withheld" ],
          "items" : {
            "type" : "string",
            "enum" : [ "affiliation", "confirmed_email", "connection_status", "created_at", "description", "entities", "id", "is_identity_verified", "location", "most_recent_tweet_id", "name", "parody", "pinned_tweet_id", "profile_banner_url", "profile_image_url", "protected", "public_metrics", "receives_your_dm", "subscription", "subscription_type", "url", "username", "verified", "verified_followers_count", "verified_type", "withheld" ]
          }
        },
        "x-ballerina-name" : "userFields"
      },
      "WebhookConfigFieldsParameter" : {
        "name" : "webhook_config.fields",
        "in" : "query",
        "description" : "A comma separated list of WebhookConfig fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a WebhookConfig object.",
          "example" : [ "created_at", "id", "url", "valid" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "id", "url", "valid" ]
          }
        },
        "x-ballerina-name" : "webhookConfigFields"
      }
    },
    "securitySchemes" : {
      "BearerToken" : {
        "type" : "http",
        "scheme" : "bearer"
      },
      "OAuth2UserToken" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://api.x.com/2/oauth2/authorize",
            "tokenUrl" : "https://api.x.com/2/oauth2/token",
            "scopes" : {
              "block.read" : "View accounts you have blocked.",
              "bookmark.read" : "Read your bookmarked Posts.",
              "bookmark.write" : "Create and delete your bookmarks.",
              "dm.read" : "Read all your Direct Messages.",
              "dm.write" : "Send and manage your Direct Messages.",
              "follows.read" : "View accounts you follow and accounts following you.",
              "follows.write" : "Follow and unfollow accounts on your behalf.",
              "like.read" : "View Posts you have liked and likes you can see.",
              "like.write" : "Like and unlike Posts on your behalf.",
              "list.read" : "View Lists, members, and followers of Lists you created or are a member of, including private Lists.",
              "list.write" : "Create and manage Lists on your behalf.",
              "media.write" : "Upload media, such as photos and videos, on your behalf.",
              "mute.read" : "View accounts you have muted.",
              "mute.write" : "Mute and unmute accounts on your behalf.",
              "offline.access" : "Request a refresh token for the app.",
              "space.read" : "View all Spaces you have access to.",
              "timeline.read" : "View all Custom Timelines you can see, including public Custom Timelines from other developers.",
              "tweet.moderate.write" : "Hide and unhide replies to your Posts.",
              "tweet.read" : "View all Posts you can see, including those from protected accounts.",
              "tweet.write" : "Post and repost on your behalf.",
              "users.read" : "View any account you can see, including protected accounts."
            }
          }
        }
      },
      "UserToken" : {
        "type" : "http",
        "scheme" : "OAuth"
      }
    }
  }
}